{
  "config": {
    "configFile": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/playwright.config.ts",
    "rootDir": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests",
    "forbidOnly": false,
    "fullyParallel": false,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 4
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/node_modules/ortoni-report/dist/ortoni-report.js",
        {
          "logo": "./logo.png",
          "filename": "index.html",
          "authorName": "Kalyan Kumar",
          "base64Image": false,
          "preferredTheme": "light",
          "projectName": "Playwright Demo",
          "testType": "Smoke"
        }
      ],
      [
        "dot",
        null
      ],
      [
        "html",
        {
          "open": "never"
        }
      ],
      [
        "json",
        {
          "outputFile": "test-result.json"
        }
      ],
      [
        "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/node_modules/allure-playwright/dist/cjs/index.js",
        null
      ],
      [
        "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/custom-report.ts",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 15000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "chromium",
        "name": "chromium",
        "testDir": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "version": "1.45.3",
    "workers": 4,
    "webServer": null
  },
  "suites": [
    {
      "title": "analytics.spec.ts",
      "file": "analytics.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Analystics API test cases",
          "file": "analytics.spec.ts",
          "line": 20,
          "column": 6,
          "specs": [
            {
              "title": "POST from re-usable method -  - iteration - 1",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "status": "failed",
                      "duration": 543,
                      "error": {
                        "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                        "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/analytics.spec.ts:29:34",
                        "location": {
                          "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                          "column": 159,
                          "line": 27
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                            "column": 159,
                            "line": 27
                          },
                          "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/analytics.spec.ts:29:34\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Base URL <><><><><><><><><> :: \u001b[90mundefined\u001b[39m\n"
                        },
                        {
                          "text": "{ duration: { limit: \u001b[33m48\u001b[39m, period: \u001b[32m'hours'\u001b[39m } }\n"
                        },
                        {
                          "text": "Token status code is ***************** - >200\n"
                        },
                        {
                          "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 75 - ms\n"
                        },
                        {
                          "text": "\u001b[33m401\u001b[39m\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2024-10-03T11:12:17.841Z",
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/analytics-Analystics-API-t-d2928-le-method-----iteration---1-chromium/test-failed-1.png"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/analytics-Analystics-API-t-d2928-le-method-----iteration---1-chromium/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "634c82c6846b68aa8d60-464e53e70fabb7a4e0d2",
              "file": "analytics.spec.ts",
              "line": 23,
              "column": 13
            },
            {
              "title": "POST from re-usable method -  - iteration - 2",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 4,
                      "status": "failed",
                      "duration": 589,
                      "error": {
                        "message": "Error:  Expected  '400 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"40\u001b[7m0\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"40\u001b[7m1\u001b[27m\"\u001b[39m",
                        "stack": "Error:  Expected  '400 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"40\u001b[7m0\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"40\u001b[7m1\u001b[27m\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/analytics.spec.ts:29:34",
                        "location": {
                          "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                          "column": 159,
                          "line": 27
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                            "column": 159,
                            "line": 27
                          },
                          "message": "Error:  Expected  '400 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"40\u001b[7m0\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"40\u001b[7m1\u001b[27m\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/analytics.spec.ts:29:34\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Base URL <><><><><><><><><> :: \u001b[90mundefined\u001b[39m\n"
                        },
                        {
                          "text": "{ kk: { limit: \u001b[32m'yy'\u001b[39m, period: \u001b[32m'hours'\u001b[39m } }\n"
                        },
                        {
                          "text": "Token status code is ***************** - >200\n"
                        },
                        {
                          "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 83 - ms\n"
                        },
                        {
                          "text": "\u001b[33m401\u001b[39m\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2024-10-03T11:12:19.487Z",
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/analytics-Analystics-API-t-01b46-le-method-----iteration---2-chromium/test-failed-1.png"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/analytics-Analystics-API-t-01b46-le-method-----iteration---2-chromium/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "634c82c6846b68aa8d60-1af575cc91e73bcc20db",
              "file": "analytics.spec.ts",
              "line": 23,
              "column": 13
            },
            {
              "title": "get cumulative metrics for error code",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 8,
                      "status": "passed",
                      "duration": 668,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "Base URL <><><><><><><><><> :: \u001b[90mundefined\u001b[39m\n"
                        },
                        {
                          "text": "{\n  duration: { limit: \u001b[33m90\u001b[39m, period: \u001b[32m'days'\u001b[39m },\n  organizationId: \u001b[32m'ORG-75BEE1C4'\u001b[39m,\n  errorSeries: \u001b[33m400\u001b[39m\n}\n"
                        },
                        {
                          "text": "Token status code is ***************** - >200\n"
                        },
                        {
                          "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 113 - ms\n"
                        },
                        {
                          "text": "\u001b[33m200\u001b[39m\n"
                        },
                        {
                          "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                        },
                        {
                          "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2024-10-03T11:12:21.173Z",
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/analytics-Analystics-API-t-9bea7-tive-metrics-for-error-code-chromium/test-finished-1.png"
                        }
                      ]
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "634c82c6846b68aa8d60-54cb69d5d6580996f230",
              "file": "analytics.spec.ts",
              "line": 36,
              "column": 9
            },
            {
              "title": "Get Traffic-Metric",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 8,
                      "status": "passed",
                      "duration": 413,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "{\n  dashboardType: \u001b[32m'analytics'\u001b[39m,\n  kpis: [ \u001b[32m'traffic-metric'\u001b[39m ],\n  timePeriod: { startDate: \u001b[32m'2021-06-01'\u001b[39m, endDate: \u001b[32m'2021-06-30'\u001b[39m }\n}\n"
                        },
                        {
                          "text": "Token status code is ***************** - >200\n"
                        },
                        {
                          "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 101 - ms\n"
                        },
                        {
                          "text": "\u001b[33m200\u001b[39m\n"
                        },
                        {
                          "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: [] }\n"
                        },
                        {
                          "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2024-10-03T11:12:22.007Z",
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/analytics-Analystics-API-test-cases-Get-Traffic-Metric-chromium/test-finished-1.png"
                        }
                      ]
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "634c82c6846b68aa8d60-7a6212c1243105610dcd",
              "file": "analytics.spec.ts",
              "line": 47,
              "column": 9
            },
            {
              "title": "GetTraffic-Status-Metric",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 8,
                      "status": "passed",
                      "duration": 509,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "{\n  dashboardType: \u001b[32m'analytics'\u001b[39m,\n  kpis: [ \u001b[32m'traffic-status-metric'\u001b[39m ],\n  timePeriod: { startDate: \u001b[32m'2021-06-01'\u001b[39m, endDate: \u001b[32m'2021-06-30'\u001b[39m }\n}\n"
                        },
                        {
                          "text": "Token status code is ***************** - >200\n"
                        },
                        {
                          "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 123 - ms\n"
                        },
                        {
                          "text": "\u001b[33m200\u001b[39m\n"
                        },
                        {
                          "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: { \u001b[32m'200'\u001b[39m: [], \u001b[32m'300'\u001b[39m: [], \u001b[32m'400'\u001b[39m: [], \u001b[32m'500'\u001b[39m: [] }\n}\n"
                        },
                        {
                          "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2024-10-03T11:12:22.432Z",
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/analytics-Analystics-API-test-cases-GetTraffic-Status-Metric-chromium/test-finished-1.png"
                        }
                      ]
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "634c82c6846b68aa8d60-68cac28224d2fcc9e46a",
              "file": "analytics.spec.ts",
              "line": 58,
              "column": 9
            },
            {
              "title": "Get Existing Apis for Metrices",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 8,
                      "status": "failed",
                      "duration": 311,
                      "error": {
                        "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                        "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/analytics.spec.ts:73:30",
                        "location": {
                          "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                          "column": 159,
                          "line": 27
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                            "column": 159,
                            "line": 27
                          },
                          "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/analytics.spec.ts:73:30\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "{}\n"
                        },
                        {
                          "text": "Token status code is ***************** - >200\n"
                        },
                        {
                          "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 62 - ms\n"
                        },
                        {
                          "text": "\u001b[33m401\u001b[39m\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2024-10-03T11:12:22.951Z",
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/analytics-Analystics-API-t-ce446--Existing-Apis-for-Metrices-chromium/test-failed-1.png"
                        },
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/analytics-Analystics-API-t-ce446--Existing-Apis-for-Metrices-chromium/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "634c82c6846b68aa8d60-a3f1751fcaa3653dd5c9",
              "file": "analytics.spec.ts",
              "line": 68,
              "column": 9
            }
          ]
        }
      ]
    },
    {
      "title": "apiBilling.spec.ts",
      "file": "apiBilling.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Get eligible organization list for provider filter invoice search",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 1,
                  "status": "failed",
                  "duration": 598,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiBilling.spec.ts:23:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiBilling.spec.ts:23:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  statusCode: \u001b[32m'200'\u001b[39m,\n  endPoint: \u001b[32m'/api/content/provider/subscriptions/eligibleorganization/'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 119 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:17.891Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-Get-eligible-or-37d52-vider-filter-invoice-search-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-Get-eligible-or-37d52-vider-filter-invoice-search-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "7da66db2e74da8a24b4d-6d7501c41e4d4bc6ba28",
          "file": "apiBilling.spec.ts",
          "line": 17,
          "column": 5
        },
        {
          "title": "Get Subscribed API List",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 6,
                  "status": "passed",
                  "duration": 573,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  statusCode: \u001b[32m'200'\u001b[39m,\n  endPoint: \u001b[32m'/api/connect/providers/USR-8D602D67/apilists'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 109 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:19.630Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-Get-Subscribed-API-List-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7da66db2e74da8a24b4d-e08f8af9ebc535e06e62",
          "file": "apiBilling.spec.ts",
          "line": 30,
          "column": 5
        },
        {
          "title": "API Invoice Search",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 6,
                  "status": "passed",
                  "duration": 449,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/providerapi/invoicesearch'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { invoiceStatus: \u001b[32m'not-paid'\u001b[39m, invoicePeriod: \u001b[36m[Object]\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  invoiceStatus: \u001b[32m'not-paid'\u001b[39m,\n  invoicePeriod: {\n    startDate: \u001b[32m'2018-12-01T18:30:00.000Z'\u001b[39m,\n    endDate: \u001b[32m'2020-01-24T18:30:00.000Z'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 145 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "Aplication ID is :: undefined\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:20.414Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-API-Invoice-Search-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7da66db2e74da8a24b4d-94fed76859a1a30e7d57",
          "file": "apiBilling.spec.ts",
          "line": 79,
          "column": 5
        },
        {
          "title": "API Invoice Email notification",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 6,
                  "status": "failed",
                  "duration": 591,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiBilling.spec.ts:109:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiBilling.spec.ts:109:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 116 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    invoiceId: \u001b[32m'INV-A9618B99'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully and PDF has been generated successfully.'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "INV-A9618B99\n"
                    },
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/providerapi/invoice/notification'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      invoiceId: \u001b[32m'INV-D8A2838A'\u001b[39m,\n      startDate: \u001b[32m'2024-01-08 00:00:00'\u001b[39m,\n      endDate: \u001b[32m'2024-31-08 00:00:00'\u001b[39m,\n      recipient: \u001b[36m[Array]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  invoiceId: \u001b[32m'INV-D8A2838A'\u001b[39m,\n  startDate: \u001b[32m'2024-01-08 00:00:00'\u001b[39m,\n  endDate: \u001b[32m'2024-31-08 00:00:00'\u001b[39m,\n  recipient: [ { emailId: \u001b[32m'sachin.kumar@yappes.com'\u001b[39m, customerName: \u001b[32m'pritu'\u001b[39m } ]\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 64 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:20.873Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-API-Invoice-Email-notification-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-API-Invoice-Email-notification-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "7da66db2e74da8a24b4d-e7db55ca57662a9f7c69",
          "file": "apiBilling.spec.ts",
          "line": 97,
          "column": 5
        },
        {
          "title": "API Invoice Preview",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 10,
                  "status": "passed",
                  "duration": 680,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/providerapi/apiI1234/invoicepreview'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      apiId: \u001b[32m'API-58117C79'\u001b[39m,\n      userId: \u001b[32m'USR-B9A3E61D'\u001b[39m,\n      invoicePeriod: \u001b[36m[Object]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  apiId: \u001b[32m'API-58117C79'\u001b[39m,\n  userId: \u001b[32m'USR-B9A3E61D'\u001b[39m,\n  invoicePeriod: { startDate: \u001b[32m'2020-01-01'\u001b[39m, endDate: \u001b[32m'2020-01-31'\u001b[39m }\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 125 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m400\u001b[39m,\n  name: \u001b[32m'parameter-error'\u001b[39m,\n  message: \u001b[32m'Incorrect query parameters.'\u001b[39m\n}\n"
                    },
                    {
                      "text": "[]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:22.605Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-API-Invoice-Preview-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7da66db2e74da8a24b4d-b305d815b0b129873f2a",
          "file": "apiBilling.spec.ts",
          "line": 119,
          "column": 5
        },
        {
          "title": "Create API Invoice",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 10,
                  "status": "passed",
                  "duration": 1021,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 197 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    message: \u001b[32m'Organization creation is successfull'\u001b[39m,\n    organizationId: \u001b[32m'ORG-CC04724D'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "ORG-CC04724D\n"
                    },
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/billing/generate-invoice'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      consumerOrganization: \u001b[32m'ORG-DF554CBA'\u001b[39m,\n      invoicePeriod: \u001b[36m[Object]\u001b[39m,\n      isInvoiceRegenerate: \u001b[33mfalse\u001b[39m,\n      oldInvoiceId: \u001b[32m''\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  consumerOrganization: \u001b[32m'ORG-CC04724D'\u001b[39m,\n  invoicePeriod: { startDate: \u001b[32m'2024-09-01 00:00:00'\u001b[39m, endDate: \u001b[32m'2024-09-30 00:00:00'\u001b[39m },\n  isInvoiceRegenerate: \u001b[33mfalse\u001b[39m,\n  oldInvoiceId: \u001b[32m''\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 127 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    message: \u001b[32m'There are no subscriptions linked to selected combination of organization and date range.'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "mesaage  ID is :: There are no subscriptions linked to selected combination of organization and date range.\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "DELETE - API response time <><><><><><><><><><><><><><><><>   :: 145 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    message: \u001b[32m'Organization has been deleted successfully. The APIs and Users associated with the deleted organization has been migrated to Master.'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "Organization has been deleted successfully. The APIs and Users associated with the deleted organization has been migrated to Master.\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:23.482Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-Create-API-Invoice-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7da66db2e74da8a24b4d-9cfccc5319f7e12c0d60",
          "file": "apiBilling.spec.ts",
          "line": 135,
          "column": 5
        },
        {
          "title": "Provider Eligible Invoice List",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 10,
                  "status": "failed",
                  "duration": 359,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiBilling.spec.ts:168:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiBilling.spec.ts:168:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/providerapi/eligible/invoicelist'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiId: \u001b[32m''\u001b[39m, subscriberId: \u001b[32m''\u001b[39m, invoicePeriod: \u001b[32m''\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{ apiId: \u001b[32m''\u001b[39m, subscriberId: \u001b[32m''\u001b[39m, invoicePeriod: \u001b[32m''\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 83 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:24.515Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-Provider-Eligible-Invoice-List-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-Provider-Eligible-Invoice-List-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "7da66db2e74da8a24b4d-4df3384cf6440c47eb21",
          "file": "apiBilling.spec.ts",
          "line": 160,
          "column": 5
        },
        {
          "title": "Get Invoice Details",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 13,
                  "status": "passed",
                  "duration": 486,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/user/USR-FC7376A1/invoices'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 62 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:25.822Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-Get-Invoice-Details-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7da66db2e74da8a24b4d-5bf4c99e6f452ac877f4",
          "file": "apiBilling.spec.ts",
          "line": 209,
          "column": 5
        },
        {
          "title": "GET user billing details",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 13,
                  "status": "failed",
                  "duration": 303,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiBilling.spec.ts:228:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiBilling.spec.ts:228:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/user/billing/USR-FC7376A1'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 51 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:26.466Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-GET-user-billing-details-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-GET-user-billing-details-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "7da66db2e74da8a24b4d-4bca8d9cb961506b22be",
          "file": "apiBilling.spec.ts",
          "line": 222,
          "column": 5
        },
        {
          "title": "User Invoice Preview Details",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 16,
                  "status": "failed",
                  "duration": 481,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiBilling.spec.ts:261:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiBilling.spec.ts:261:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/admin/invoiceready/details'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      emailId: \u001b[32m'rajagopal.s@yappes.com'\u001b[39m,\n      userId: \u001b[32m'USR-FC7376A1'\u001b[39m,\n      invoicePeriod: \u001b[36m[Object]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  emailId: \u001b[32m'rajagopal.s@yappes.com'\u001b[39m,\n  userId: \u001b[32m'USR-FC7376A1'\u001b[39m,\n  invoicePeriod: { startDate: \u001b[32m'2018-05-01'\u001b[39m, endDate: \u001b[32m'2018-05-31'\u001b[39m }\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 86 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:27.566Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-User-Invoice-Preview-Details-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-User-Invoice-Preview-Details-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "7da66db2e74da8a24b4d-538278893096b4ad53c1",
          "file": "apiBilling.spec.ts",
          "line": 253,
          "column": 5
        },
        {
          "title": "batch job schedule event",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "status": "passed",
                  "duration": 842,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/batch/jobs'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      type: \u001b[32m'event'\u001b[39m,\n      jobType: \u001b[32m'scheduled'\u001b[39m,\n      action: \u001b[32m'invoice-generation'\u001b[39m,\n      client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n      client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  type: \u001b[32m'event'\u001b[39m,\n  jobType: \u001b[32m'scheduled'\u001b[39m,\n  action: \u001b[32m'invoice-generation'\u001b[39m,\n  client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n  client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 453 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "[\n  {\n    customerName: \u001b[32m'null null'\u001b[39m,\n    emailId: \u001b[1mnull\u001b[22m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-432A6F3A'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'null null'\u001b[39m,\n    emailId: \u001b[1mnull\u001b[22m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-4E54809E'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'pritu kaushik'\u001b[39m,\n    emailId: \u001b[32m'pritu.kumar@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-CE3F20C6'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Kailas Parameswaran'\u001b[39m,\n    emailId: \u001b[32m'kailas.p@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-502C1A70'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Sarvesh Sasidharan'\u001b[39m,\n    emailId: \u001b[32m'sarvesh.s@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-059F93AB'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Kailas Parameswaran'\u001b[39m,\n    emailId: \u001b[32m'kailas.p@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-C8DD930D'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'chakarwartyyy maheshwar'\u001b[39m,\n    emailId: \u001b[32m'chakarwarty.m@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-E69D2919'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Girish Manchineeru'\u001b[39m,\n    emailId: \u001b[32m'girish.m@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-74E6128C'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Girish Manchineeru'\u001b[39m,\n    emailId: \u001b[32m'girish.m@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-56615C4B'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'chandan HM'\u001b[39m,\n    emailId: \u001b[32m'chandan.m@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-BFA9983F'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'chandan HM'\u001b[39m,\n    emailId: \u001b[32m'chandan.m@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-D74465A5'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Kailas Parameswaran'\u001b[39m,\n    emailId: \u001b[32m'kailas.p@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-71601065'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Sarvesh Sasidharan'\u001b[39m,\n    emailId: \u001b[32m'sarvesh.s@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-1A9CBD38'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Kailas Parameswaran'\u001b[39m,\n    emailId: \u001b[32m'kailas.p@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-2578A564'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Kailas Parameswaran'\u001b[39m,\n    emailId: \u001b[32m'kailas.p@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-EA68AC6E'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'chakarwartyyy maheshwar'\u001b[39m,\n    emailId: \u001b[32m'chakarwarty.m@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-02CA557D'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Kailas Parameswaran'\u001b[39m,\n    emailId: \u001b[32m'kailas.p@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-40730469'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'chandan HM'\u001b[39m,\n    emailId: \u001b[32m'chandan.m@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-304FA04B'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'null null'\u001b[39m,\n    emailId: \u001b[1mnull\u001b[22m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-A50BD4CF'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Kailas Parameswaran'\u001b[39m,\n    emailId: \u001b[32m'kailas.p@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-431CA01D'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Kailas Parameswaran'\u001b[39m,\n    emailId: \u001b[32m'kailas.p@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-56756060'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Kailas Parameswaran'\u001b[39m,\n    emailId: \u001b[32m'kailas.p@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-914A3D98'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'null null'\u001b[39m,\n    emailId: \u001b[1mnull\u001b[22m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-7A86A2D5'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'Kailas Parameswaran'\u001b[39m,\n    emailId: \u001b[32m'kailas.p@yappes.com'\u001b[39m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-8826B87E'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  },\n  {\n    customerName: \u001b[32m'null null'\u001b[39m,\n    emailId: \u001b[1mnull\u001b[22m,\n    startDate: \u001b[32m'2024-09-01'\u001b[39m,\n    endDate: \u001b[32m'2024-10-03'\u001b[39m,\n    invoiceId: \u001b[32m'INV-BD32217A'\u001b[39m,\n    message: \u001b[32m'Invoice Created Successfully'\u001b[39m,\n    statusCode: \u001b[33m200\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:29.068Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiBilling-batch-job-schedule-event-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "7da66db2e74da8a24b4d-e1e339fbe4f4fb925f07",
          "file": "apiBilling.spec.ts",
          "line": 271,
          "column": 5
        }
      ]
    },
    {
      "title": "apiGroups.spec.ts",
      "file": "apiGroups.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "create API groups",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 2,
                  "status": "passed",
                  "duration": 606,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/apigroups'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { groupName: \u001b[32m'dddd1'\u001b[39m, description: \u001b[32m'dd'\u001b[39m, marketplace: \u001b[36m[Object]\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  groupName: \u001b[32m'test- 6352'\u001b[39m,\n  description: \u001b[32m'dd'\u001b[39m,\n  marketplace: { subscriptionEnabled: \u001b[33mtrue\u001b[39m, marketplaceListing: \u001b[33mfalse\u001b[39m }\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 121 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: { message: \u001b[32m'API Group created Successfully'\u001b[39m }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "message is :: API Group created Successfully\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:17.931Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-create-API-groups-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "3c48be4f5bd279430684-6b073038070ed91848b6",
          "file": "apiGroups.spec.ts",
          "line": 16,
          "column": 5
        },
        {
          "title": "Update API groups",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 2,
                  "status": "failed",
                  "duration": 708,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiGroups.spec.ts:50:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiGroups.spec.ts:50:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 164 - ms\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      _id: \u001b[32m'66fe7c12f6ef11f25f1ca532'\u001b[39m,\n      groupId: \u001b[32m'GRP-F380'\u001b[39m,\n      groupName: \u001b[32m'test- 6352'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fadbc56bcd37232e6aed28'\u001b[39m,\n      groupId: \u001b[32m'GRP-7351'\u001b[39m,\n      groupName: \u001b[32m'test- 3297'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66faaf135b04242dc9400391'\u001b[39m,\n      groupId: \u001b[32m'GRP-D286'\u001b[39m,\n      groupName: \u001b[32m'test- 5900'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66faa36e4056576c6bc4a5ab'\u001b[39m,\n      groupId: \u001b[32m'GRP-4E19'\u001b[39m,\n      groupName: \u001b[32m'res'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa9e2b6bcd37232e6aecb6'\u001b[39m,\n      groupId: \u001b[32m'GRP-DE4A'\u001b[39m,\n      groupName: \u001b[32m'test- 1423'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa8e294056576c6bc4a582'\u001b[39m,\n      groupId: \u001b[32m'GRP-1111'\u001b[39m,\n      groupName: \u001b[32m'test- 6549'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa8d826bcd37232e6aeca5'\u001b[39m,\n      groupId: \u001b[32m'GRP-0DAB'\u001b[39m,\n      groupName: \u001b[32m'test- 6746'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa81226bcd37232e6aec65'\u001b[39m,\n      groupId: \u001b[32m'GRP-3AB9'\u001b[39m,\n      groupName: \u001b[32m'dddd1'\u001b[39m,\n      description: \u001b[32m'ddd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66f536f9934bd7693a93ca61'\u001b[39m,\n      groupId: \u001b[32m'GRP-4E3A'\u001b[39m,\n      groupName: \u001b[32m'KYC Group'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66ebe91b2b89d740477472b2'\u001b[39m,\n      groupId: \u001b[32m'GRP-D9A0'\u001b[39m,\n      groupName: \u001b[32m'dddd'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m1\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66ebbdc12b89d74047747028'\u001b[39m,\n      groupId: \u001b[32m'GRP-F57E'\u001b[39m,\n      groupName: \u001b[32m'Attached Gateway'\u001b[39m,\n      description: \u001b[32m'Checking'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66d96992fdb124ecd3a91b1d'\u001b[39m,\n      groupId: \u001b[32m'GRP-9606'\u001b[39m,\n      groupName: \u001b[32m'nvghvgjvh'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.integration.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66d5873c6c01443f496722ae'\u001b[39m,\n      groupId: \u001b[32m'GRP-8A8B'\u001b[39m,\n      groupName: \u001b[32m'fghj'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.integration.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'665ed1a5e5b35c31546cffc6'\u001b[39m,\n      groupId: \u001b[32m'GRP-CF9A'\u001b[39m,\n      groupName: \u001b[32m'whatsapp banking client'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m9\u001b[39m\n    },\n    {\n      _id: \u001b[32m'665456c382a994ca9919c676'\u001b[39m,\n      groupId: \u001b[32m'GRP-481B'\u001b[39m,\n      groupName: \u001b[32m'chakruu6777'\u001b[39m,\n      description: \u001b[32m'ffff6666'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66545abd82a994ca9919c691'\u001b[39m,\n      groupId: \u001b[32m'GRP-66DA'\u001b[39m,\n      groupName: \u001b[32m'Chakru567'\u001b[39m,\n      description: \u001b[32m'mmmm@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!@@#2323232323232vs;mamqlncacnn an clamcla cnla clan laclna lacnal nca lanclann ncan lcan alnclalncaln lacl acln lacla ncla lcan ncalcnlanclanclanclanclnaln clanclanclnalcnalncanclnlcnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m6\u001b[39m\n    },\n    {\n      _id: \u001b[32m'6633a3e1472ef0dbf5664cd9'\u001b[39m,\n      groupId: \u001b[32m'GRP-B80D'\u001b[39m,\n      groupName: \u001b[32m'TestGroup'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m7\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66176b4a4b5cc31d24a88acd'\u001b[39m,\n      groupId: \u001b[32m'GRP-40DC'\u001b[39m,\n      groupName: \u001b[32m'sdfsf324324'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    },\n    {\n      _id: \u001b[32m'6628d3925f9e385f15793766'\u001b[39m,\n      groupId: \u001b[32m'GRP-AE8A'\u001b[39m,\n      groupName: \u001b[32m'test'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "GRP-F380\n"
                    },
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/provider/apigroups/GROUPID'\u001b[39m,\n    requestbody: {\n      groupName: \u001b[32m'GRP-3D0C'\u001b[39m,\n      description: \u001b[32m'dd1'\u001b[39m,\n      logoUrl: \u001b[32m'...'\u001b[39m,\n      groupId: \u001b[32m'GRP-3AB9'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "After update --  [\n  {\n    \"statusCode\": \"200\",\n    \"endPoint\": \"/api/content/provider/apigroups/GROUPID\",\n    \"requestbody\": {\n      \"groupName\": \"test- 6352\",\n      \"description\": \"dd1\",\n      \"logoUrl\": \"storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group\",\n      \"groupId\": \"GRP-F380\",\n      \"marketplace\": {\n        \"subscriptionEnabled\": false,\n        \"marketplaceListing\": false\n      }\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 81 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:18.720Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-Update-API-groups-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-Update-API-groups-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "3c48be4f5bd279430684-3d0a13ddf518a6fca06b",
          "file": "apiGroups.spec.ts",
          "line": 34,
          "column": 5
        },
        {
          "title": "Get API group details",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 7,
                  "status": "passed",
                  "duration": 547,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  statusCode: \u001b[32m'200'\u001b[39m,\n  endPoint: \u001b[32m'/api/content/provider/apigroups/GRP-3D0C/'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 161 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:20.449Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-Get-API-group-details-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "3c48be4f5bd279430684-9d0af332d77c97c3c3a6",
          "file": "apiGroups.spec.ts",
          "line": 57,
          "column": 5
        },
        {
          "title": "Get All API groups",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 7,
                  "status": "passed",
                  "duration": 536,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{ statusCode: \u001b[32m'200'\u001b[39m, endPoint: \u001b[32m'/api/content/provider/apigroups'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 108 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      _id: \u001b[32m'66fe7c12f6ef11f25f1ca532'\u001b[39m,\n      groupId: \u001b[32m'GRP-F380'\u001b[39m,\n      groupName: \u001b[32m'test- 6352'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fadbc56bcd37232e6aed28'\u001b[39m,\n      groupId: \u001b[32m'GRP-7351'\u001b[39m,\n      groupName: \u001b[32m'test- 3297'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66faaf135b04242dc9400391'\u001b[39m,\n      groupId: \u001b[32m'GRP-D286'\u001b[39m,\n      groupName: \u001b[32m'test- 5900'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66faa36e4056576c6bc4a5ab'\u001b[39m,\n      groupId: \u001b[32m'GRP-4E19'\u001b[39m,\n      groupName: \u001b[32m'res'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa9e2b6bcd37232e6aecb6'\u001b[39m,\n      groupId: \u001b[32m'GRP-DE4A'\u001b[39m,\n      groupName: \u001b[32m'test- 1423'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa8e294056576c6bc4a582'\u001b[39m,\n      groupId: \u001b[32m'GRP-1111'\u001b[39m,\n      groupName: \u001b[32m'test- 6549'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa8d826bcd37232e6aeca5'\u001b[39m,\n      groupId: \u001b[32m'GRP-0DAB'\u001b[39m,\n      groupName: \u001b[32m'test- 6746'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa81226bcd37232e6aec65'\u001b[39m,\n      groupId: \u001b[32m'GRP-3AB9'\u001b[39m,\n      groupName: \u001b[32m'dddd1'\u001b[39m,\n      description: \u001b[32m'ddd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66f536f9934bd7693a93ca61'\u001b[39m,\n      groupId: \u001b[32m'GRP-4E3A'\u001b[39m,\n      groupName: \u001b[32m'KYC Group'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66ebe91b2b89d740477472b2'\u001b[39m,\n      groupId: \u001b[32m'GRP-D9A0'\u001b[39m,\n      groupName: \u001b[32m'dddd'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m1\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66ebbdc12b89d74047747028'\u001b[39m,\n      groupId: \u001b[32m'GRP-F57E'\u001b[39m,\n      groupName: \u001b[32m'Attached Gateway'\u001b[39m,\n      description: \u001b[32m'Checking'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66d96992fdb124ecd3a91b1d'\u001b[39m,\n      groupId: \u001b[32m'GRP-9606'\u001b[39m,\n      groupName: \u001b[32m'nvghvgjvh'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.integration.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66d5873c6c01443f496722ae'\u001b[39m,\n      groupId: \u001b[32m'GRP-8A8B'\u001b[39m,\n      groupName: \u001b[32m'fghj'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.integration.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'665ed1a5e5b35c31546cffc6'\u001b[39m,\n      groupId: \u001b[32m'GRP-CF9A'\u001b[39m,\n      groupName: \u001b[32m'whatsapp banking client'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m9\u001b[39m\n    },\n    {\n      _id: \u001b[32m'665456c382a994ca9919c676'\u001b[39m,\n      groupId: \u001b[32m'GRP-481B'\u001b[39m,\n      groupName: \u001b[32m'chakruu6777'\u001b[39m,\n      description: \u001b[32m'ffff6666'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66545abd82a994ca9919c691'\u001b[39m,\n      groupId: \u001b[32m'GRP-66DA'\u001b[39m,\n      groupName: \u001b[32m'Chakru567'\u001b[39m,\n      description: \u001b[32m'mmmm@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!@@#2323232323232vs;mamqlncacnn an clamcla cnla clan laclna lacnal nca lanclann ncan lcan alnclalncaln lacl acln lacla ncla lcan ncalcnlanclanclanclanclnaln clanclanclnalcnalncanclnlcnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m6\u001b[39m\n    },\n    {\n      _id: \u001b[32m'6633a3e1472ef0dbf5664cd9'\u001b[39m,\n      groupId: \u001b[32m'GRP-B80D'\u001b[39m,\n      groupName: \u001b[32m'TestGroup'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m7\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66176b4a4b5cc31d24a88acd'\u001b[39m,\n      groupId: \u001b[32m'GRP-40DC'\u001b[39m,\n      groupName: \u001b[32m'sdfsf324324'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    },\n    {\n      _id: \u001b[32m'6628d3925f9e385f15793766'\u001b[39m,\n      groupId: \u001b[32m'GRP-AE8A'\u001b[39m,\n      groupName: \u001b[32m'test'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:21.135Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-Get-All-API-groups-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "3c48be4f5bd279430684-53f537c5cc34fdd1bf4f",
          "file": "apiGroups.spec.ts",
          "line": 70,
          "column": 5
        },
        {
          "title": "Get Apis Already Added to the Group",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 7,
                  "status": "failed",
                  "duration": 10693,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiGroups.spec.ts:96:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiGroups.spec.ts:96:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 98 - ms\n"
                    },
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/apigroups/addedlist'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiGroupId: \u001b[32m'GRP-DE4A'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{ apiGroupId: \u001b[32m''\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 10177 - ms\n"
                    },
                    {
                      "text": "\u001b[33m502\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:21.684Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-Get-Apis-Already-Added-to-the-Group-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-Get-Apis-Already-Added-to-the-Group-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "3c48be4f5bd279430684-c1c87302095bb255b728",
          "file": "apiGroups.spec.ts",
          "line": 85,
          "column": 5
        },
        {
          "title": "List API to add to the Group",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 25,
                  "status": "passed",
                  "duration": 633,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{ endPoint: \u001b[32m'/api/content/provider/apigroups'\u001b[39m, statusCode: \u001b[32m'200'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 136 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      _id: \u001b[32m'66fe7c12f6ef11f25f1ca532'\u001b[39m,\n      groupId: \u001b[32m'GRP-F380'\u001b[39m,\n      groupName: \u001b[32m'test- 6352'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fadbc56bcd37232e6aed28'\u001b[39m,\n      groupId: \u001b[32m'GRP-7351'\u001b[39m,\n      groupName: \u001b[32m'test- 3297'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66faaf135b04242dc9400391'\u001b[39m,\n      groupId: \u001b[32m'GRP-D286'\u001b[39m,\n      groupName: \u001b[32m'test- 5900'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66faa36e4056576c6bc4a5ab'\u001b[39m,\n      groupId: \u001b[32m'GRP-4E19'\u001b[39m,\n      groupName: \u001b[32m'res'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa9e2b6bcd37232e6aecb6'\u001b[39m,\n      groupId: \u001b[32m'GRP-DE4A'\u001b[39m,\n      groupName: \u001b[32m'test- 1423'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa8e294056576c6bc4a582'\u001b[39m,\n      groupId: \u001b[32m'GRP-1111'\u001b[39m,\n      groupName: \u001b[32m'test- 6549'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa8d826bcd37232e6aeca5'\u001b[39m,\n      groupId: \u001b[32m'GRP-0DAB'\u001b[39m,\n      groupName: \u001b[32m'test- 6746'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa81226bcd37232e6aec65'\u001b[39m,\n      groupId: \u001b[32m'GRP-3AB9'\u001b[39m,\n      groupName: \u001b[32m'dddd1'\u001b[39m,\n      description: \u001b[32m'ddd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66f536f9934bd7693a93ca61'\u001b[39m,\n      groupId: \u001b[32m'GRP-4E3A'\u001b[39m,\n      groupName: \u001b[32m'KYC Group'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66ebe91b2b89d740477472b2'\u001b[39m,\n      groupId: \u001b[32m'GRP-D9A0'\u001b[39m,\n      groupName: \u001b[32m'dddd'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m1\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66ebbdc12b89d74047747028'\u001b[39m,\n      groupId: \u001b[32m'GRP-F57E'\u001b[39m,\n      groupName: \u001b[32m'Attached Gateway'\u001b[39m,\n      description: \u001b[32m'Checking'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66d96992fdb124ecd3a91b1d'\u001b[39m,\n      groupId: \u001b[32m'GRP-9606'\u001b[39m,\n      groupName: \u001b[32m'nvghvgjvh'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.integration.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66d5873c6c01443f496722ae'\u001b[39m,\n      groupId: \u001b[32m'GRP-8A8B'\u001b[39m,\n      groupName: \u001b[32m'fghj'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.integration.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'665ed1a5e5b35c31546cffc6'\u001b[39m,\n      groupId: \u001b[32m'GRP-CF9A'\u001b[39m,\n      groupName: \u001b[32m'whatsapp banking client'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m9\u001b[39m\n    },\n    {\n      _id: \u001b[32m'665456c382a994ca9919c676'\u001b[39m,\n      groupId: \u001b[32m'GRP-481B'\u001b[39m,\n      groupName: \u001b[32m'chakruu6777'\u001b[39m,\n      description: \u001b[32m'ffff6666'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66545abd82a994ca9919c691'\u001b[39m,\n      groupId: \u001b[32m'GRP-66DA'\u001b[39m,\n      groupName: \u001b[32m'Chakru567'\u001b[39m,\n      description: \u001b[32m'mmmm@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!@@#2323232323232vs;mamqlncacnn an clamcla cnla clan laclna lacnal nca lanclann ncan lcan alnclalncaln lacl acln lacla ncla lcan ncalcnlanclanclanclanclnaln clanclanclnalcnalncanclnlcnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m6\u001b[39m\n    },\n    {\n      _id: \u001b[32m'6633a3e1472ef0dbf5664cd9'\u001b[39m,\n      groupId: \u001b[32m'GRP-B80D'\u001b[39m,\n      groupName: \u001b[32m'TestGroup'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m7\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66176b4a4b5cc31d24a88acd'\u001b[39m,\n      groupId: \u001b[32m'GRP-40DC'\u001b[39m,\n      groupName: \u001b[32m'sdfsf324324'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    },\n    {\n      _id: \u001b[32m'6628d3925f9e385f15793766'\u001b[39m,\n      groupId: \u001b[32m'GRP-AE8A'\u001b[39m,\n      groupName: \u001b[32m'test'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:33.674Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-List-API-to-add-to-the-Group-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "3c48be4f5bd279430684-17721765028c85aa09f6",
          "file": "apiGroups.spec.ts",
          "line": 104,
          "column": 5
        },
        {
          "title": "Add API to the Group",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 25,
                  "status": "passed",
                  "duration": 688,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 98 - ms\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      _id: \u001b[32m'66fe7c12f6ef11f25f1ca532'\u001b[39m,\n      groupId: \u001b[32m'GRP-F380'\u001b[39m,\n      groupName: \u001b[32m'test- 6352'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fadbc56bcd37232e6aed28'\u001b[39m,\n      groupId: \u001b[32m'GRP-7351'\u001b[39m,\n      groupName: \u001b[32m'test- 3297'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66faaf135b04242dc9400391'\u001b[39m,\n      groupId: \u001b[32m'GRP-D286'\u001b[39m,\n      groupName: \u001b[32m'test- 5900'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66faa36e4056576c6bc4a5ab'\u001b[39m,\n      groupId: \u001b[32m'GRP-4E19'\u001b[39m,\n      groupName: \u001b[32m'res'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa9e2b6bcd37232e6aecb6'\u001b[39m,\n      groupId: \u001b[32m'GRP-DE4A'\u001b[39m,\n      groupName: \u001b[32m'test- 1423'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa8e294056576c6bc4a582'\u001b[39m,\n      groupId: \u001b[32m'GRP-1111'\u001b[39m,\n      groupName: \u001b[32m'test- 6549'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa8d826bcd37232e6aeca5'\u001b[39m,\n      groupId: \u001b[32m'GRP-0DAB'\u001b[39m,\n      groupName: \u001b[32m'test- 6746'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66fa81226bcd37232e6aec65'\u001b[39m,\n      groupId: \u001b[32m'GRP-3AB9'\u001b[39m,\n      groupName: \u001b[32m'dddd1'\u001b[39m,\n      description: \u001b[32m'ddd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66f536f9934bd7693a93ca61'\u001b[39m,\n      groupId: \u001b[32m'GRP-4E3A'\u001b[39m,\n      groupName: \u001b[32m'KYC Group'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66ebe91b2b89d740477472b2'\u001b[39m,\n      groupId: \u001b[32m'GRP-D9A0'\u001b[39m,\n      groupName: \u001b[32m'dddd'\u001b[39m,\n      description: \u001b[32m'dd'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m1\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66ebbdc12b89d74047747028'\u001b[39m,\n      groupId: \u001b[32m'GRP-F57E'\u001b[39m,\n      groupName: \u001b[32m'Attached Gateway'\u001b[39m,\n      description: \u001b[32m'Checking'\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m4\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66d96992fdb124ecd3a91b1d'\u001b[39m,\n      groupId: \u001b[32m'GRP-9606'\u001b[39m,\n      groupName: \u001b[32m'nvghvgjvh'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.integration.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66d5873c6c01443f496722ae'\u001b[39m,\n      groupId: \u001b[32m'GRP-8A8B'\u001b[39m,\n      groupName: \u001b[32m'fghj'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'storageapi.integration.yappes-enterprise.com/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'665ed1a5e5b35c31546cffc6'\u001b[39m,\n      groupId: \u001b[32m'GRP-CF9A'\u001b[39m,\n      groupName: \u001b[32m'whatsapp banking client'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m9\u001b[39m\n    },\n    {\n      _id: \u001b[32m'665456c382a994ca9919c676'\u001b[39m,\n      groupId: \u001b[32m'GRP-481B'\u001b[39m,\n      groupName: \u001b[32m'chakruu6777'\u001b[39m,\n      description: \u001b[32m'ffff6666'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m0\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66545abd82a994ca9919c691'\u001b[39m,\n      groupId: \u001b[32m'GRP-66DA'\u001b[39m,\n      groupName: \u001b[32m'Chakru567'\u001b[39m,\n      description: \u001b[32m'mmmm@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!@@#2323232323232vs;mamqlncacnn an clamcla cnla clan laclna lacnal nca lanclann ncan lcan alnclalncaln lacl acln lacla ncla lcan ncalcnlanclanclanclanclnaln clanclanclnalcnalncanclnlcnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m6\u001b[39m\n    },\n    {\n      _id: \u001b[32m'6633a3e1472ef0dbf5664cd9'\u001b[39m,\n      groupId: \u001b[32m'GRP-B80D'\u001b[39m,\n      groupName: \u001b[32m'TestGroup'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m7\u001b[39m\n    },\n    {\n      _id: \u001b[32m'66176b4a4b5cc31d24a88acd'\u001b[39m,\n      groupId: \u001b[32m'GRP-40DC'\u001b[39m,\n      groupName: \u001b[32m'sdfsf324324'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    },\n    {\n      _id: \u001b[32m'6628d3925f9e385f15793766'\u001b[39m,\n      groupId: \u001b[32m'GRP-AE8A'\u001b[39m,\n      groupName: \u001b[32m'test'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/defaults?format=png&meta=group'\u001b[39m,\n      marketplace: \u001b[36m[Object]\u001b[39m,\n      apisCount: \u001b[33m2\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "GRP-F380\n"
                    },
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/apigroups/apiadd'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiGroupId: \u001b[32m'GRP-3AB9'\u001b[39m, apisToAdd: \u001b[36m[Array]\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  apiGroupId: \u001b[32m'GRP-F380'\u001b[39m,\n  apisToAdd: [ \u001b[32m'API-839E45DE'\u001b[39m, \u001b[32m'API-ECA837E3'\u001b[39m, \u001b[32m'API-BC38C799'\u001b[39m, \u001b[32m'API-101C98E4'\u001b[39m ]\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 120 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    message: \u001b[32m'Selected APIs have been added successfully for the group'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "Aplication ID is :: undefined\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:34.455Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-Add-API-to-the-Group-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "3c48be4f5bd279430684-64aae351a05f616e5972",
          "file": "apiGroups.spec.ts",
          "line": 117,
          "column": 5
        },
        {
          "title": "Remove API from the Group",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 25,
                  "status": "passed",
                  "duration": 498,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/apigroups/apiremove'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiGroupId: \u001b[32m'60ebfaf282c67b0012d3ea07'\u001b[39m, apisToRemove: \u001b[36m[Array]\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  apiGroupId: \u001b[32m'60ebfaf282c67b0012d3ea07'\u001b[39m,\n  apisToRemove: [ \u001b[32m'API-14F96DD0'\u001b[39m, \u001b[32m'API-27EE45A7'\u001b[39m ]\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 115 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m401\u001b[39m,\n  status: \u001b[32m'invalid-access'\u001b[39m,\n  data: { message: \u001b[32m'Cannot perform remove operation on this API Group'\u001b[39m }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'invalid-access'\u001b[39m ]\n"
                    },
                    {
                      "text": "Aplication ID is :: undefined\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:35.154Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-Remove-API-from-the-Group-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "3c48be4f5bd279430684-13da21bdb264f650dfca",
          "file": "apiGroups.spec.ts",
          "line": 138,
          "column": 5
        },
        {
          "title": "Get Internal Organization List",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 25,
                  "status": "passed",
                  "duration": 540,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/provider/internalorganization/list'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 121 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      organizationName: \u001b[32m'Yappes Organization'\u001b[39m,\n      organizationId: \u001b[32m'ORG-9C2D5B74'\u001b[39m,\n      type: \u001b[32m'master'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'sachinnnnn'\u001b[39m,\n      organizationId: \u001b[32m'ORG-E768CEC6'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'gauravv'\u001b[39m,\n      organizationId: \u001b[32m'ORG-73608295'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'test-org3'\u001b[39m,\n      organizationId: \u001b[32m'ORG-960D950A'\u001b[39m,\n      type: \u001b[1mnull\u001b[22m\n    },\n    {\n      organizationName: \u001b[32m'ewrewr324324'\u001b[39m,\n      organizationId: \u001b[32m'ORG-A08D59D2'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'testnew'\u001b[39m,\n      organizationId: \u001b[32m'ORG-C9DCC4FF'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'neworganization '\u001b[39m,\n      organizationId: \u001b[32m'ORG-DF554CBA'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'neworganization2'\u001b[39m,\n      organizationId: \u001b[32m'ORG-D4F089DC'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'newsachin'\u001b[39m,\n      organizationId: \u001b[32m'ORG-3B68A0BF'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'hellooosooossos'\u001b[39m,\n      organizationId: \u001b[32m'ORG-CA4D40DF'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'heeeee'\u001b[39m,\n      organizationId: \u001b[32m'ORG-84C30D68'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'newsssss'\u001b[39m,\n      organizationId: \u001b[32m'ORG-A8CB8011'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'Internal'\u001b[39m,\n      organizationId: \u001b[32m'ORG-A2BD8974'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'API Partner'\u001b[39m,\n      organizationId: \u001b[32m'ORG-370AE2EC'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'hfmhg'\u001b[39m,\n      organizationId: \u001b[32m'ORG-79FF4F68'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'ghfjf'\u001b[39m,\n      organizationId: \u001b[32m'ORG-04DA3537'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'New organization'\u001b[39m,\n      organizationId: \u001b[32m'ORG-C70F6726'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'nrwwww3455'\u001b[39m,\n      organizationId: \u001b[32m'ORG-AE02308A'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'Admin org'\u001b[39m,\n      organizationId: \u001b[32m'ORG-7E656480'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'HHHH34'\u001b[39m,\n      organizationId: \u001b[32m'ORG-423F500A'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'NY677'\u001b[39m,\n      organizationId: \u001b[32m'ORG-CC150395'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'HTTT'\u001b[39m,\n      organizationId: \u001b[32m'ORG-AF2958BF'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'API ORGGG'\u001b[39m,\n      organizationId: \u001b[32m'ORG-CAFD93E8'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'Whatsapp Client'\u001b[39m,\n      organizationId: \u001b[32m'ORG-7D5C244C'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'test org'\u001b[39m,\n      organizationId: \u001b[32m'ORG-288732CC'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'fff'\u001b[39m,\n      organizationId: \u001b[32m'ORG-EC644662'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'ffff'\u001b[39m,\n      organizationId: \u001b[32m'ORG-FD354F91'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'ff7126'\u001b[39m,\n      organizationId: \u001b[32m'ORG-C2E8534F'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'ff3956'\u001b[39m,\n      organizationId: \u001b[32m'ORG-4B0580AF'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'ff2297'\u001b[39m,\n      organizationId: \u001b[32m'ORG-D56DEE51'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'ff5732'\u001b[39m,\n      organizationId: \u001b[32m'ORG-F6B53937'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'ff8545'\u001b[39m,\n      organizationId: \u001b[32m'ORG-82E1AFDD'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'org check '\u001b[39m,\n      organizationId: \u001b[32m'ORG-E78D6DAE'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    },\n    {\n      organizationName: \u001b[32m'ff1892'\u001b[39m,\n      organizationId: \u001b[32m'ORG-F56D5E38'\u001b[39m,\n      type: \u001b[32m'internal'\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:35.666Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-Get-Internal-Organization-List-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "3c48be4f5bd279430684-d00594c2bd63e31d9137",
          "file": "apiGroups.spec.ts",
          "line": 155,
          "column": 5
        },
        {
          "title": "GET Organization Basic Details",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 25,
                  "status": "failed",
                  "duration": 525,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiGroups.spec.ts:179:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiGroups.spec.ts:179:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/user/organization/basic/details/ORG-9C2D5B74'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 103 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:36.225Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-GET-Organization-Basic-Details-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-GET-Organization-Basic-Details-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "3c48be4f5bd279430684-f73201c69ad0b4c7dfa0",
          "file": "apiGroups.spec.ts",
          "line": 173,
          "column": 5
        },
        {
          "title": "GET All Monitor Var",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 31,
                  "status": "failed",
                  "duration": 644,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiGroups.spec.ts:192:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/apiGroups.spec.ts:192:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/get/monitoring/mastervars'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 88 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:37.917Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-GET-All-Monitor-Var-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-GET-All-Monitor-Var-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "3c48be4f5bd279430684-8782d572331c41ee60ae",
          "file": "apiGroups.spec.ts",
          "line": 186,
          "column": 5
        },
        {
          "title": "GET External Organisation",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 34,
                  "status": "passed",
                  "duration": 585,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/user/external/organizationlist'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 143 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      organizationId: \u001b[32m'ORG-785CFC52'\u001b[39m,\n      organizationName: \u001b[32m'upwork vendor'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-09-27T14:47:58.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m1\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-CF1F49E2'\u001b[39m,\n      organizationName: \u001b[32m'UPW Partner'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[1mnull\u001b[22m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-09-26T17:04:58.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m2\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-22FB8ACF'\u001b[39m,\n      organizationName: \u001b[32m'LOS Consumer1'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-09-26T15:23:51.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m1\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-69C1B6BE'\u001b[39m,\n      organizationName: \u001b[32m'prituyoyo'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[1mnull\u001b[22m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-09-24T14:08:17.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m2\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-3228ED5E'\u001b[39m,\n      organizationName: \u001b[32m'pritu098'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[1mnull\u001b[22m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-09-24T12:53:41.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-4108DD50'\u001b[39m,\n      organizationName: \u001b[32m'Kailastest260824'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'For testing of API Billing and Subscription'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.integration.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-08-26T11:00:36.000Z'\u001b[39m,\n      userCount: \u001b[33m2\u001b[39m,\n      apiCount: \u001b[33m14\u001b[39m,\n      billingDetails: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-C168BDEB'\u001b[39m,\n      organizationName: \u001b[32m'GenericExternalUsers'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'GenericExternalUsers'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-07-16T17:32:36.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-5D9A1D46'\u001b[39m,\n      organizationName: \u001b[32m'PaymentTech'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'PaymentTech'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-06-03T11:22:35.000Z'\u001b[39m,\n      userCount: \u001b[33m2\u001b[39m,\n      apiCount: \u001b[33m4\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-AF2958BF'\u001b[39m,\n      organizationName: \u001b[32m'HTTT'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'GHHHH'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-15T16:05:00.000Z'\u001b[39m,\n      userCount: \u001b[33m2\u001b[39m,\n      apiCount: \u001b[33m8\u001b[39m,\n      billingDetails: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-CC150395'\u001b[39m,\n      organizationName: \u001b[32m'NY677'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'GGGG'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-15T16:04:03.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m21\u001b[39m,\n      billingDetails: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-423F500A'\u001b[39m,\n      organizationName: \u001b[32m'HHHH34'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'HHHHHHH'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-15T16:02:36.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-D298617D'\u001b[39m,\n      organizationName: \u001b[32m'HHH'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'HHHHH'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-15T16:02:02.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-ED7CE9DE'\u001b[39m,\n      organizationName: \u001b[32m'API ORGG'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'GGGGG'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-15T15:58:47.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-7E656480'\u001b[39m,\n      organizationName: \u001b[32m'Admin org'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-15T15:56:48.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m82\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-AE02308A'\u001b[39m,\n      organizationName: \u001b[32m'nrwwww3455'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'ffgfgg'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-15T15:31:11.000Z'\u001b[39m,\n      userCount: \u001b[33m2\u001b[39m,\n      apiCount: \u001b[33m5\u001b[39m,\n      billingDetails: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-C70F6726'\u001b[39m,\n      organizationName: \u001b[32m'New organization'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'fdbgh'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-15T15:28:54.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-04DA3537'\u001b[39m,\n      organizationName: \u001b[32m'ghfjf'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'fjgj'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-15T11:36:59.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-79FF4F68'\u001b[39m,\n      organizationName: \u001b[32m'hfmhg'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'jgjgkgk'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-15T11:35:48.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-370AE2EC'\u001b[39m,\n      organizationName: \u001b[32m'API Partner'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'dfdgfghfhfh'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-13T15:50:05.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m13\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-97FB5432'\u001b[39m,\n      organizationName: \u001b[32m'test'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-07T16:42:51.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-A8CB8011'\u001b[39m,\n      organizationName: \u001b[32m'newsssss'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'hhhhh'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-06T11:22:36.000Z'\u001b[39m,\n      userCount: \u001b[33m2\u001b[39m,\n      apiCount: \u001b[33m31\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-D4F089DC'\u001b[39m,\n      organizationName: \u001b[32m'neworganization2'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'fff'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-06T10:48:01.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-AF165344'\u001b[39m,\n      organizationName: \u001b[32m'NewAPIPartnerOrg'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-05-03T15:14:55.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-A08D59D2'\u001b[39m,\n      organizationName: \u001b[32m'ewrewr324324'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'55555'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-04-25T12:34:38.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m6\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-C53A2953'\u001b[39m,\n      organizationName: \u001b[32m'sbiexternal'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'vd'\u001b[39m,\n      logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=organization'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-04-18T11:30:49.000Z'\u001b[39m,\n      userCount: \u001b[33m2\u001b[39m,\n      apiCount: \u001b[33m0\u001b[39m,\n      billingDetails: {}\n    },\n    {\n      organizationId: \u001b[32m'ORG-E768CEC6'\u001b[39m,\n      organizationName: \u001b[32m'sachinnnnn'\u001b[39m,\n      type: \u001b[32m'external'\u001b[39m,\n      description: \u001b[32m'ddfdfdfczvv'\u001b[39m,\n      logoUrl: \u001b[32m'url'\u001b[39m,\n      gstNumber: \u001b[1mnull\u001b[22m,\n      modifiedDateTime: \u001b[32m'2024-04-11T15:22:26.000Z'\u001b[39m,\n      userCount: \u001b[33m1\u001b[39m,\n      apiCount: \u001b[33m1\u001b[39m,\n      billingDetails: {}\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:39.623Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-GET-External-Organisation-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "3c48be4f5bd279430684-564e29cda5c6569656d1",
          "file": "apiGroups.spec.ts",
          "line": 199,
          "column": 5
        },
        {
          "title": "Delete API group",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 34,
                  "status": "passed",
                  "duration": 393,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/provider/apigroups/deletegroup'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "DELETE - API response time <><><><><><><><><><><><><><><><>   :: 121 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:40.340Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-Delete-API-group-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "3c48be4f5bd279430684-add18df1235f17b317e3",
          "file": "apiGroups.spec.ts",
          "line": 212,
          "column": 5
        },
        {
          "title": "apigroup API list",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 34,
                  "status": "passed",
                  "duration": 805,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/apigroups/apilist'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { organization: \u001b[32m'Yappes Organization'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{ organization: \u001b[32m'Yappes Organization'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 531 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      apiName: \u001b[32m'Trans FX API'\u001b[39m,\n      apiId: \u001b[32m'API-ECA837E3'\u001b[39m,\n      tags: \u001b[32m'TAG-49E63DF1'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-10-03T13:21:34.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'pritu30'\u001b[39m,\n      apiId: \u001b[32m'API-839E45DE'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-10-01T15:46:13.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'TRANS KYC API01'\u001b[39m,\n      apiId: \u001b[32m'API-BC38C799'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.1.1'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-09-27T14:21:55.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'UNC KYC API01'\u001b[39m,\n      apiId: \u001b[32m'API-92E67248'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-09-26T15:47:08.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'MAHESHWARrt'\u001b[39m,\n      apiId: \u001b[32m'API-FB65E0A2'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-09-24T17:32:26.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'pritu23433333'\u001b[39m,\n      apiId: \u001b[32m'API-761F89CB'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-09-24T13:35:53.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'freeplan'\u001b[39m,\n      apiId: \u001b[32m'API-45EAF46B'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C,TAG-F85F55A2,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-09-24T10:33:22.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'ECL KYCAPI01'\u001b[39m,\n      apiId: \u001b[32m'API-1A1C6B17'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-09-20T18:00:47.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'INS KYC API01'\u001b[39m,\n      apiId: \u001b[32m'API-101C98E4'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-09-19T17:05:25.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'MIG API01'\u001b[39m,\n      apiId: \u001b[32m'API-B902BDC8'\u001b[39m,\n      tags: \u001b[32m'TAG-F85F55A2'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-09-19T11:42:58.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'zxcv'\u001b[39m,\n      apiId: \u001b[32m'API-A17F1C56'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'0.0.1'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-09-02T15:13:05.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'test123'\u001b[39m,\n      apiId: \u001b[32m'API-9CE010C7'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-08-30T09:22:12.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'sachikumar17'\u001b[39m,\n      apiId: \u001b[32m'API-E69235AE'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-08-29T11:16:42.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'pritu3'\u001b[39m,\n      apiId: \u001b[32m'API-9C8B8156'\u001b[39m,\n      tags: \u001b[32m'TAG-F85F55A2'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'2.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-08-29T11:16:41.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'testest12'\u001b[39m,\n      apiId: \u001b[32m'API-402F8DD6'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-08-29T11:16:41.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'test111'\u001b[39m,\n      apiId: \u001b[32m'API-475A51EA'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-08-29T11:16:41.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'test2'\u001b[39m,\n      apiId: \u001b[32m'API-98053CEB'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.2.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-08-29T11:16:41.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'kailas test 02 August 2023'\u001b[39m,\n      apiId: \u001b[32m'API-D9FE44C1'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-08-09T15:45:15.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'Sec API01'\u001b[39m,\n      apiId: \u001b[32m'API-5C193A16'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-07-29T12:13:32.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'API Name ddj'\u001b[39m,\n      apiId: \u001b[32m'API-E9D1582C'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'2.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-07-25T15:49:54.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'jwtestpraven'\u001b[39m,\n      apiId: \u001b[32m'API-E6ED0337'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-07-25T15:48:55.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'dfgdfg'\u001b[39m,\n      apiId: \u001b[32m'API-342EA8A7'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-07-12T16:42:28.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'uuuuuuuuu'\u001b[39m,\n      apiId: \u001b[32m'API-F88997B6'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-07-12T15:57:30.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'jwttestpraveen'\u001b[39m,\n      apiId: \u001b[32m'API-181E9462'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'2.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-07-09T18:09:39.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'pktestjwt34343'\u001b[39m,\n      apiId: \u001b[32m'API-E9E3D3CC'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'2.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-07-09T18:02:03.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'kaushik123'\u001b[39m,\n      apiId: \u001b[32m'API-4343DC81'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'3.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-07-05T14:28:31.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'basepathcheck'\u001b[39m,\n      apiId: \u001b[32m'API-56FB5870'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-17T16:36:01.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'sachinbasecheck'\u001b[39m,\n      apiId: \u001b[32m'API-E72D1A14'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-15T14:40:05.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'mmmsss'\u001b[39m,\n      apiId: \u001b[32m'API-3131D68D'\u001b[39m,\n      tags: \u001b[32m'TAG-F85F55A2'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-14T14:51:40.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'sachin kichaa'\u001b[39m,\n      apiId: \u001b[32m'API-015A0D33'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-14T11:51:51.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'test1499'\u001b[39m,\n      apiId: \u001b[32m'API-6B948E9C'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'0.0.1'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-12T17:33:19.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'json'\u001b[39m,\n      apiId: \u001b[32m'API-783F8095'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.2.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-12T09:56:32.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'chgj'\u001b[39m,\n      apiId: \u001b[32m'API-CD1B2185'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-11T18:25:10.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'NV API01'\u001b[39m,\n      apiId: \u001b[32m'API-2DD3C725'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-11T17:06:57.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'sachiiiiiiiiiimmmmm'\u001b[39m,\n      apiId: \u001b[32m'API-694C7BEE'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-10T17:12:01.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'CB Bank API02'\u001b[39m,\n      apiId: \u001b[32m'API-16A4E9F6'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'2.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-10T15:00:19.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'VN API01'\u001b[39m,\n      apiId: \u001b[32m'API-1955D491'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C,TAG-F85F55A2,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'2.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-05T14:51:33.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'CB API01'\u001b[39m,\n      apiId: \u001b[32m'API-192781A3'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-05T11:43:40.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'GC Bank API01'\u001b[39m,\n      apiId: \u001b[32m'API-CA0DE08F'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-06-03T11:19:20.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'groupapi'\u001b[39m,\n      apiId: \u001b[32m'API-589A9D56'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-31T11:21:38.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'mmmmmmmkkk'\u001b[39m,\n      apiId: \u001b[32m'API-5029446D'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-30T10:48:39.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'sachimn123'\u001b[39m,\n      apiId: \u001b[32m'API-70C92947'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-29T16:34:22.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'Path API01'\u001b[39m,\n      apiId: \u001b[32m'API-9FB46378'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-29T11:34:02.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'whitelist'\u001b[39m,\n      apiId: \u001b[32m'API-18E5B8BB'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.2.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-29T11:16:00.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'chandanip'\u001b[39m,\n      apiId: \u001b[32m'API-403E2003'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-28T10:24:02.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'maheshwar'\u001b[39m,\n      apiId: \u001b[32m'API-CB8DCA0F'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'decommissioned'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.1'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mtrue\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-27T16:22:21.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'threshold'\u001b[39m,\n      apiId: \u001b[32m'API-EFEC1CDA'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.5.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-27T09:57:53.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'gghfewfgwg'\u001b[39m,\n      apiId: \u001b[32m'API-DF03AB2C'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'2.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-24T16:38:18.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'MM API01'\u001b[39m,\n      apiId: \u001b[32m'API-75E96EA8'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-23T17:53:29.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'prituji1'\u001b[39m,\n      apiId: \u001b[32m'API-A71DD6FD'\u001b[39m,\n      tags: \u001b[32m'TAG-F85F55A2'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-23T12:39:31.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'API name'\u001b[39m,\n      apiId: \u001b[32m'API-D785EA2A'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-23T11:55:47.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'test54'\u001b[39m,\n      apiId: \u001b[32m'API-0D722657'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-23T10:39:26.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'ATL API01'\u001b[39m,\n      apiId: \u001b[32m'API-3C638CE4'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-22T15:10:50.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'fff'\u001b[39m,\n      apiId: \u001b[32m'API-912AF705'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-22T12:45:10.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'chandan'\u001b[39m,\n      apiId: \u001b[32m'API-9AF207EF'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-22T12:25:31.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'info'\u001b[39m,\n      apiId: \u001b[32m'API-145CF19D'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-21T17:32:31.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'apicheck1'\u001b[39m,\n      apiId: \u001b[32m'API-1412A974'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-21T11:26:43.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'Kailas test 123'\u001b[39m,\n      apiId: \u001b[32m'API-350F52AB'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-21T11:21:19.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'new API'\u001b[39m,\n      apiId: \u001b[32m'API-1B62C316'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-20T12:13:03.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'gaurav'\u001b[39m,\n      apiId: \u001b[32m'API-59EA2918'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-20T12:11:19.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'new ticket'\u001b[39m,\n      apiId: \u001b[32m'API-2FF1DE30'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-20T12:03:03.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'blocking1'\u001b[39m,\n      apiId: \u001b[32m'API-E8C413BB'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-20T11:48:40.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'ipsachincheck'\u001b[39m,\n      apiId: \u001b[32m'API-1245204D'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-16T11:01:17.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'new API name'\u001b[39m,\n      apiId: \u001b[32m'API-6D2D0A37'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.2.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-16T10:30:50.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'sachinTesting'\u001b[39m,\n      apiId: \u001b[32m'API-3E361A97'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C,TAG-F85F55A2'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-15T12:08:00.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'testingIP'\u001b[39m,\n      apiId: \u001b[32m'API-7D6451D9'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-15T11:52:05.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'jwttest542'\u001b[39m,\n      apiId: \u001b[32m'API-040A4044'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-09T10:33:51.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'usagestest'\u001b[39m,\n      apiId: \u001b[32m'API-8E6F71A3'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-08T15:34:08.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'Rahukll'\u001b[39m,\n      apiId: \u001b[32m'API-46BC9A5B'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'2.2.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-07T12:14:16.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'testquotanew'\u001b[39m,\n      apiId: \u001b[32m'API-BA3CDE6A'\u001b[39m,\n      tags: \u001b[32m'TAG-F85F55A2'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'2.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-07T11:29:01.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'test567ttttt'\u001b[39m,\n      apiId: \u001b[32m'API-3172F92A'\u001b[39m,\n      tags: \u001b[32m'TAG-F85F55A2'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.2.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-06T11:37:57.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'chandantickettttttttttttt'\u001b[39m,\n      apiId: \u001b[32m'API-DCC52C99'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-F85F55A2'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-05-06T11:32:33.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'block44'\u001b[39m,\n      apiId: \u001b[32m'API-1B63F48D'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-30T15:47:05.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'sss'\u001b[39m,\n      apiId: \u001b[32m'API-C0625A44'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-30T15:45:14.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'mysusbcheckblock'\u001b[39m,\n      apiId: \u001b[32m'API-D1D564F7'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'2.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-30T15:18:06.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'test4'\u001b[39m,\n      apiId: \u001b[32m'API-8760F01A'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'2.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-30T15:16:54.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'TEstpermnoblock'\u001b[39m,\n      apiId: \u001b[32m'API-A9003ED3'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-30T10:46:10.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'TestBlock12'\u001b[39m,\n      apiId: \u001b[32m'API-E62F6EE6'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-30T10:41:48.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'sachin22'\u001b[39m,\n      apiId: \u001b[32m'API-E82676AB'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-29T17:32:22.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'automation13t1a3'\u001b[39m,\n      apiId: \u001b[32m'API-305A990A'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-29T17:15:35.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'Block2'\u001b[39m,\n      apiId: \u001b[32m'API-DA020E3A'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-29T16:18:13.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'test1030'\u001b[39m,\n      apiId: \u001b[32m'API-2B2667D7'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-29T15:30:32.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'ticket1026'\u001b[39m,\n      apiId: \u001b[32m'API-8FB5E21E'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-25T12:32:02.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'apitestblockip'\u001b[39m,\n      apiId: \u001b[32m'API-E2B8A54C'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-24T17:59:24.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'gfff'\u001b[39m,\n      apiId: \u001b[32m'API-650F9220'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-23T17:47:47.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'bgggg'\u001b[39m,\n      apiId: \u001b[32m'API-9E604286'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C,TAG-14265800'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'2.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-23T17:44:45.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'jsonplaceholder1'\u001b[39m,\n      apiId: \u001b[32m'API-94BD0DD8'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-23T16:56:48.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'automationxlvmor'\u001b[39m,\n      apiId: \u001b[32m'API-60335946'\u001b[39m,\n      tags: \u001b[32m'TAG-14265800'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-23T16:53:55.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'yooTest'\u001b[39m,\n      apiId: \u001b[32m'API-2F25D48C'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-23T12:28:59.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'jwttestauthpraveen'\u001b[39m,\n      apiId: \u001b[32m'API-0D982A86'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-19T15:42:37.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'apitestunblockip2'\u001b[39m,\n      apiId: \u001b[32m'API-5D945579'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-18T12:04:20.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'api23'\u001b[39m,\n      apiId: \u001b[32m'API-4A07F9FB'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-17T12:09:08.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'apitestunlblockip34444'\u001b[39m,\n      apiId: \u001b[32m'API-D16B1EFC'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-17T11:40:35.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'routew'\u001b[39m,\n      apiId: \u001b[32m'API-D65ED981'\u001b[39m,\n      tags: \u001b[32m'TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-15T16:33:37.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'Juiiiasisaoooool'\u001b[39m,\n      apiId: \u001b[32m'API-8D72074F'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'1.0.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-15T11:51:36.000Z'\u001b[39m\n    },\n    {\n      apiName: \u001b[32m'validation check'\u001b[39m,\n      apiId: \u001b[32m'API-C5CC3012'\u001b[39m,\n      tags: \u001b[32m'TAG-E0F4CE84,TAG-3E16EE5C'\u001b[39m,\n      status: \u001b[32m'published'\u001b[39m,\n      publishedVersion: \u001b[32m'0.1.0'\u001b[39m,\n      apiDecommissionStatus: \u001b[33mfalse\u001b[39m,\n      modifiedDateTime: \u001b[32m'2024-04-11T15:37:26.000Z'\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "Aplication ID is :: undefined\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:40.744Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/apiGroups-apigroup-API-list-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "3c48be4f5bd279430684-48b54a8b4dcd1f8e9100",
          "file": "apiGroups.spec.ts",
          "line": 225,
          "column": 5
        }
      ]
    },
    {
      "title": "applications.spec.ts",
      "file": "applications.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Get all application",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 3,
                  "status": "failed",
                  "duration": 545,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:22:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:22:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{ statusCode: \u001b[32m'200'\u001b[39m, endPoint: \u001b[32m'/api/content/application/'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 93 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:17.929Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-all-application-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-all-application-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-80e323025b3d519d9204",
          "file": "applications.spec.ts",
          "line": 16,
          "column": 5
        },
        {
          "title": "Create Application Keys",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 5,
                  "status": "failed",
                  "duration": 594,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:35:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:35:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/application/keys/APP-B00450AA'\u001b[39m,\n    requestbody: { applicationId: \u001b[32m'APP-B00450AA'\u001b[39m, environment: \u001b[32m'testing'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 65 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:19.602Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Create-Application-Keys-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Create-Application-Keys-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-4a6fb5e602aac75bf2f4",
          "file": "applications.spec.ts",
          "line": 29,
          "column": 5
        },
        {
          "title": "Create Application",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 9,
                  "status": "passed",
                  "duration": 673,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/application'\u001b[39m,\n    requestbody: {\n      applicationName: \u001b[32m'test App3'\u001b[39m,\n      applicationDescription: \u001b[32m'for testing creation'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  applicationName: \u001b[32m'test App3_8452'\u001b[39m,\n  applicationDescription: \u001b[32m'for testing creation'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 118 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    message: \u001b[32m'Application has been created successfully'\u001b[39m,\n    applicationId: \u001b[32m'APP-82BD52B3'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "Aplication ID is :: APP-82BD52B3\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:21.291Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Create-Application-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-a0bd3cffedbff5cd6713",
          "file": "applications.spec.ts",
          "line": 42,
          "column": 5
        },
        {
          "title": "Get all application After Post",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 9,
                  "status": "passed",
                  "duration": 430,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{ statusCode: \u001b[32m'200'\u001b[39m, endPoint: \u001b[32m'/api/content/application/'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 123 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    applicationName: \u001b[32m'test App3_8927'\u001b[39m,\n    applicationDescription: \u001b[32m'for testing creation'\u001b[39m,\n    applicationLogoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=application'\u001b[39m,\n    type: \u001b[32m'custom'\u001b[39m,\n    activeEnvironment: \u001b[32m'testing'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:22.180Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-all-application-After-Post-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-91e67e60dc6ecd91337d",
          "file": "applications.spec.ts",
          "line": 60,
          "column": 5
        },
        {
          "title": "Delete Application",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 9,
                  "status": "failed",
                  "duration": 587,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:84:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:84:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/application'\u001b[39m,\n    requestbody: {\n      applicationName: \u001b[32m'test App3'\u001b[39m,\n      applicationDescription: \u001b[32m'for testing creation'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  applicationName: \u001b[32m'test App3_9381'\u001b[39m,\n  applicationDescription: \u001b[32m'for testing creation'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 141 - ms\n"
                    },
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/application/APP-4B72BC39'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "DELETE - API response time <><><><><><><><><><><><><><><><>   :: 63 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    },
                    {
                      "text": "{\n  error: {\n    name: \u001b[32m'AuthenticationError'\u001b[39m,\n    message: \u001b[32m'Unauthorized'\u001b[39m,\n    value: \u001b[32m'invalid_token'\u001b[39m\n  }\n}\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:22.620Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Delete-Application-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Delete-Application-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-16e16ac37322ff541688",
          "file": "applications.spec.ts",
          "line": 72,
          "column": 5
        },
        {
          "title": "Update Application",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 11,
                  "status": "failed",
                  "duration": 848,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:109:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:109:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/application'\u001b[39m,\n    requestbody: {\n      applicationName: \u001b[32m'test App3'\u001b[39m,\n      applicationDescription: \u001b[32m'for testing creation'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  applicationName: \u001b[32m'test App3_5828'\u001b[39m,\n  applicationDescription: \u001b[32m'for testing creation'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 151 - ms\n"
                    },
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/application/APP-96AEE552'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      applicationId: \u001b[32m'APP-7F6AC6E3'\u001b[39m,\n      applicationName: \u001b[32m'test'\u001b[39m,\n      applicationDescription: \u001b[32m'This is a application'\u001b[39m,\n      applicationLogoUrl: \u001b[32m'gaurav-kumar'\u001b[39m,\n      activeEnvironment: \u001b[32m'testing'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 87 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:24.228Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Update-Application-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Update-Application-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-9223a015ccc806877432",
          "file": "applications.spec.ts",
          "line": 96,
          "column": 5
        },
        {
          "title": "Get Application details",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 15,
                  "status": "passed",
                  "duration": 518,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/application/APP-C3FF550C'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 93 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m401\u001b[39m,\n  status: \u001b[33m401\u001b[39m,\n  name: \u001b[32m'invalid-resource-access'\u001b[39m,\n  message: \u001b[32m'Invalid Resource Access.'\u001b[39m\n}\n"
                    },
                    {
                      "text": "[ \u001b[33m401\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:26.275Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-Application-details-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-810b7ff9d8ad91fbba88",
          "file": "applications.spec.ts",
          "line": 112,
          "column": 5
        },
        {
          "title": "Get API Followers",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 15,
                  "status": "passed",
                  "duration": 383,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{ endPoint: \u001b[32m'/api/content/followapi/API-AF8FE682'\u001b[39m, statusCode: \u001b[32m'200'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 119 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m401\u001b[39m,\n  status: \u001b[33m401\u001b[39m,\n  name: \u001b[32m'invalid-resource-access'\u001b[39m,\n  message: \u001b[32m'Invalid Resource Access.'\u001b[39m\n}\n"
                    },
                    {
                      "text": "[ \u001b[33m401\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:26.910Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-API-Followers-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-14e1fc690fea7d5e9bc8",
          "file": "applications.spec.ts",
          "line": 124,
          "column": 5
        },
        {
          "title": "Follow API",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 15,
                  "status": "passed",
                  "duration": 337,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/followapi/API-AF8FE682'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      followerId: \u001b[32m'info@yappes.com'\u001b[39m,\n      value: \u001b[32m'1'\u001b[39m,\n      userId: \u001b[32m'infoe40'\u001b[39m,\n      apiId: \u001b[32m'APP-3ADD5C07'\u001b[39m,\n      submittedBy: \u001b[32m'xyz'\u001b[39m,\n      modifiedBy: \u001b[32m'dsg'\u001b[39m,\n      submittedDateTime: \u001b[32m'3'\u001b[39m,\n      modifiedDateTime: \u001b[32m'12'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 102 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m401\u001b[39m,\n  status: \u001b[33m401\u001b[39m,\n  name: \u001b[32m'invalid-resource-access'\u001b[39m,\n  message: \u001b[32m'Invalid Resource Access.'\u001b[39m\n}\n"
                    },
                    {
                      "text": "[ \u001b[33m401\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:27.301Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Follow-API-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-afe864630581a0c8d81e",
          "file": "applications.spec.ts",
          "line": 136,
          "column": 5
        },
        {
          "title": "UnFollow API",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 15,
                  "status": "passed",
                  "duration": 357,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/followapi/API-AF8FE682'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      followerId: \u001b[32m''\u001b[39m,\n      value: \u001b[32m''\u001b[39m,\n      userId: \u001b[32m''\u001b[39m,\n      apiId: \u001b[32m''\u001b[39m,\n      submittedBy: \u001b[32m''\u001b[39m,\n      modifiedBy: \u001b[32m''\u001b[39m,\n      submittedDateTime: \u001b[32m''\u001b[39m,\n      modifiedDateTime: \u001b[32m''\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 110 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:27.646Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-UnFollow-API-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-1e8537d3af44e8c8cf02",
          "file": "applications.spec.ts",
          "line": 148,
          "column": 5
        },
        {
          "title": "Get API Votes",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 15,
                  "status": "passed",
                  "duration": 320,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{ endPoint: \u001b[32m'/api/content/voteapi/API-AF8FE682'\u001b[39m, statusCode: \u001b[32m'200'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 96 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m401\u001b[39m,\n  status: \u001b[33m401\u001b[39m,\n  name: \u001b[32m'invalid-resource-access'\u001b[39m,\n  message: \u001b[32m'Invalid Resource Access.'\u001b[39m\n}\n"
                    },
                    {
                      "text": "[ \u001b[33m401\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:28.011Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-API-Votes-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-17b671dcab421c99e450",
          "file": "applications.spec.ts",
          "line": 157,
          "column": 5
        },
        {
          "title": "UpVote An API",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 15,
                  "status": "passed",
                  "duration": 412,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/voteapi/API-AF8FE682'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      voteId: \u001b[32m''\u001b[39m,\n      value: \u001b[32m''\u001b[39m,\n      userId: \u001b[32m''\u001b[39m,\n      apiId: \u001b[32m''\u001b[39m,\n      submittedBy: \u001b[32m''\u001b[39m,\n      modifiedBy: \u001b[32m''\u001b[39m,\n      submittedDateTime: \u001b[32m''\u001b[39m,\n      modifiedDateTime: \u001b[32m''\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 95 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m401\u001b[39m,\n  status: \u001b[33m401\u001b[39m,\n  name: \u001b[32m'invalid-resource-access'\u001b[39m,\n  message: \u001b[32m'Invalid Resource Access.'\u001b[39m\n}\n"
                    },
                    {
                      "text": "[ \u001b[33m401\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:28.338Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-UpVote-An-API-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-dd4f16a5f75599a21936",
          "file": "applications.spec.ts",
          "line": 169,
          "column": 5
        },
        {
          "title": "Down Vote An API",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 15,
                  "status": "passed",
                  "duration": 356,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/voteapi/API-AF8FE682'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      voteId: \u001b[32m''\u001b[39m,\n      value: \u001b[32m''\u001b[39m,\n      userId: \u001b[32m''\u001b[39m,\n      apiId: \u001b[32m''\u001b[39m,\n      submittedBy: \u001b[32m''\u001b[39m,\n      modifiedBy: \u001b[32m''\u001b[39m,\n      submittedDateTime: \u001b[32m''\u001b[39m,\n      modifiedDateTime: \u001b[32m''\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 91 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:28.758Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Down-Vote-An-API-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-7e591f08c95e34a028b2",
          "file": "applications.spec.ts",
          "line": 181,
          "column": 5
        },
        {
          "title": "Delete API From Application",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 15,
                  "status": "failed",
                  "duration": 354,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:196:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:196:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/connect/app/apilink/REL-01FEE412'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "DELETE - API response time <><><><><><><><><><><><><><><><>   :: 63 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:29.120Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Delete-API-From-Application-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Delete-API-From-Application-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-3acfae5c9bfc51e286b2",
          "file": "applications.spec.ts",
          "line": 190,
          "column": 5
        },
        {
          "title": "Get Application Keys",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 20,
                  "status": "passed",
                  "duration": 546,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/application/keys/APP-3ADD5C07'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 101 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m401\u001b[39m,\n  status: \u001b[33m401\u001b[39m,\n  name: \u001b[32m'invalid-resource-access'\u001b[39m,\n  message: \u001b[32m'Invalid Resource Access.'\u001b[39m\n}\n"
                    },
                    {
                      "text": "[ \u001b[33m401\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:30.234Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-Application-Keys-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-507fd20ed89c8da9cb5b",
          "file": "applications.spec.ts",
          "line": 200,
          "column": 5
        },
        {
          "title": "Regenerate Application Keys",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 20,
                  "status": "failed",
                  "duration": 287,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:218:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:218:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/application/keys/APP-3ADD5C07'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { environment: \u001b[32m'testing'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 59 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:30.909Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Regenerate-Application-Keys-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Regenerate-Application-Keys-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-c4ca17f7547204bc3a5b",
          "file": "applications.spec.ts",
          "line": 212,
          "column": 5
        },
        {
          "title": "Get Api For Consumers",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 23,
                  "status": "passed",
                  "duration": 813,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/connect/consumers/apidetails/API-02B44EFB'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 185 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:32.075Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-Api-For-Consumers-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-c5f325fdbe3dc8a7bca8",
          "file": "applications.spec.ts",
          "line": 225,
          "column": 5
        },
        {
          "title": "**Get Resource Details Consumers",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 23,
                  "status": "passed",
                  "duration": 588,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/connect/consumers/apiresources/API-02B44EFB'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 119 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: [] }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:33.008Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications--Get-Resource-Details-Consumers-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-a286ef875be1aff5d2dd",
          "file": "applications.spec.ts",
          "line": 239,
          "column": 5
        },
        {
          "title": "Get Avg Rating",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 23,
                  "status": "passed",
                  "duration": 449,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/review/ratings/average/API-02B44EFB'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 148 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:33.613Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-Avg-Rating-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-ee4728ca19ba68ae5e7f",
          "file": "applications.spec.ts",
          "line": 253,
          "column": 5
        },
        {
          "title": "Get Application APIs",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 23,
                  "status": "passed",
                  "duration": 360,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/connect/app/apilink/API-02B44EFB'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 84 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:34.070Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-Application-APIs-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-7e4db896a697d5ba2011",
          "file": "applications.spec.ts",
          "line": 267,
          "column": 5
        },
        {
          "title": "**Get About APIs Consumer",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 23,
                  "status": "failed",
                  "duration": 340,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:287:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:287:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/apis/API-B351E477/errorinfo'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 71 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:34.438Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications--Get-About-APIs-Consumer-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications--Get-About-APIs-Consumer-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-8e8daeafa7156f4f884a",
          "file": "applications.spec.ts",
          "line": 281,
          "column": 5
        },
        {
          "title": "Get Version List",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 29,
                  "status": "failed",
                  "duration": 784,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:301:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:301:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/apis/API-B351E477/errorinfo'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 107 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:35.829Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-Version-List-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Get-Version-List-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-a231cb6f1cf7d5c9d440",
          "file": "applications.spec.ts",
          "line": 295,
          "column": 5
        },
        {
          "title": "**Get License Terms Condition Consumer",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 32,
                  "status": "passed",
                  "duration": 533,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/connect/app/apilink/API-02B44EFB'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 65 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:38.015Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications--Get-License-Terms-Condition-Consumer-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-6dea87e7f1fc8fd9374c",
          "file": "applications.spec.ts",
          "line": 309,
          "column": 5
        },
        {
          "title": "List Analytics APIs Consumers",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 32,
                  "status": "passed",
                  "duration": 328,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/applications/APP-3ADD5C07/analytics?metric=api'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { duration: \u001b[32m'8'\u001b[39m, organizationId: \u001b[32m'erg'\u001b[39m, stRange: \u001b[32m'sv'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 65 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:38.748Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-List-Analytics-APIs-Consumers-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-1e876843608b80e7684b",
          "file": "applications.spec.ts",
          "line": 323,
          "column": 5
        },
        {
          "title": "Save Report",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 32,
                  "status": "failed",
                  "duration": 145,
                  "error": {
                    "message": "TypeError: Cannot read properties of undefined (reading '0')",
                    "stack": "TypeError: Cannot read properties of undefined (reading '0')\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:338:39",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts",
                      "column": 39,
                      "line": 338
                    },
                    "snippet": "\u001b[0m \u001b[90m 336 |\u001b[39m     \u001b[36mconst\u001b[39m requestBody\u001b[33m=\u001b[39m dataset[\u001b[32m'saveReport'\u001b[39m]\n \u001b[90m 337 |\u001b[39m     console\u001b[33m.\u001b[39mlog(requestBody)\u001b[33m;\u001b[39m  \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 338 |\u001b[39m     \u001b[36mconst\u001b[39m url\u001b[33m=\u001b[39m\u001b[32m`${baseUrl}${requestBody[0].endPoint}`\u001b[39m  \n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 339 |\u001b[39m     \u001b[36mconst\u001b[39m _response\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m global\u001b[33m.\u001b[39mapiUtil\u001b[33m.\u001b[39m\u001b[33mPOST\u001b[39m(request\u001b[33m,\u001b[39m\u001b[32m`${url}`\u001b[39m\u001b[33m,\u001b[39mrequestBody[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mrequestbody)\u001b[33m;\u001b[39m\n \u001b[90m 340 |\u001b[39m     console\u001b[33m.\u001b[39mlog(_response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 341 |\u001b[39m     \u001b[36mawait\u001b[39m global\u001b[33m.\u001b[39mapiUtil\u001b[33m.\u001b[39mverifyStatusCode(_response\u001b[33m,\u001b[39mrequestBody[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mstatusCode)\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts",
                        "column": 39,
                        "line": 338
                      },
                      "message": "TypeError: Cannot read properties of undefined (reading '0')\n\n\u001b[0m \u001b[90m 336 |\u001b[39m     \u001b[36mconst\u001b[39m requestBody\u001b[33m=\u001b[39m dataset[\u001b[32m'saveReport'\u001b[39m]\n \u001b[90m 337 |\u001b[39m     console\u001b[33m.\u001b[39mlog(requestBody)\u001b[33m;\u001b[39m  \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 338 |\u001b[39m     \u001b[36mconst\u001b[39m url\u001b[33m=\u001b[39m\u001b[32m`${baseUrl}${requestBody[0].endPoint}`\u001b[39m  \n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 339 |\u001b[39m     \u001b[36mconst\u001b[39m _response\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m global\u001b[33m.\u001b[39mapiUtil\u001b[33m.\u001b[39m\u001b[33mPOST\u001b[39m(request\u001b[33m,\u001b[39m\u001b[32m`${url}`\u001b[39m\u001b[33m,\u001b[39mrequestBody[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mrequestbody)\u001b[33m;\u001b[39m\n \u001b[90m 340 |\u001b[39m     console\u001b[33m.\u001b[39mlog(_response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 341 |\u001b[39m     \u001b[36mawait\u001b[39m global\u001b[33m.\u001b[39mapiUtil\u001b[33m.\u001b[39mverifyStatusCode(_response\u001b[33m,\u001b[39mrequestBody[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mstatusCode)\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts:338:39\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "\u001b[90mundefined\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:39.086Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Save-Report-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/applications-Save-Report-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/applications.spec.ts",
                    "column": 39,
                    "line": 338
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "d657ecc4bd2f4637f2d7-1da69dc986c0617ff739",
          "file": "applications.spec.ts",
          "line": 335,
          "column": 5
        }
      ]
    },
    {
      "title": "buildingApi.spec.ts",
      "file": "buildingApi.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Make API",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 12,
                  "status": "failed",
                  "duration": 525,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:19:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:19:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  statusCode: \u001b[32m'200'\u001b[39m,\n  endPoint: \u001b[32m'/api/content/definitions/provider/yappestestmail@gmail.com'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 85 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:24.244Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Make-API-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Make-API-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-cf3ea6fef8ab26b9e726",
          "file": "buildingApi.spec.ts",
          "line": 13,
          "column": 5
        },
        {
          "title": "API Environment",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 14,
                  "status": "failed",
                  "duration": 832,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:31:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:31:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/api/APP-3B489430/environmentconfig'\u001b[39m,\n    requestbody: { apiId: \u001b[32m'APP-3B489430'\u001b[39m, environmentName: \u001b[32m'development'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 343 - ms\n"
                    },
                    {
                      "text": "\u001b[33m502\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:25.819Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-API-Environment-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-API-Environment-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-723d539b37f730245888",
          "file": "buildingApi.spec.ts",
          "line": 25,
          "column": 5
        },
        {
          "title": "Update API Environment ",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 17,
                  "status": "failed",
                  "duration": 464,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:43:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:43:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/api/API-B351E477/environmentconfig/6447947d72eaa8e0c4cc28d6'\u001b[39m,\n    requestbody: {\n      apiId: \u001b[32m'API-B351E477'\u001b[39m,\n      environmentConfigData: \u001b[36m[Object]\u001b[39m,\n      environmentName: \u001b[32m'development'\u001b[39m,\n      objectId: \u001b[32m'6447947d72eaa8e0c4cc28d6'\u001b[39m,\n      userId: \u001b[32m'USR-183152C2'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 88 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:27.642Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Update-API-Environment--chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Update-API-Environment--chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-494696e9e69ae30e1e5b",
          "file": "buildingApi.spec.ts",
          "line": 37,
          "column": 5
        },
        {
          "title": "Get API Remote End Points",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 19,
                  "status": "passed",
                  "duration": 509,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  statusCode: \u001b[32m'200'\u001b[39m,\n  endPoint: \u001b[32m'/api/content/api/API-B351E477/remotes'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 115 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: { message: \u001b[32m'No data found.'\u001b[39m },\n  allSecurityKeyFiles: []\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:29.151Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Get-API-Remote-End-Points-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "9434df3c51644fdb7118-20a5e5bd021afe389667",
          "file": "buildingApi.spec.ts",
          "line": 49,
          "column": 5
        },
        {
          "title": "Get API Custom Logic",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 19,
                  "status": "failed",
                  "duration": 557,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:67:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:67:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/newapi/logic/RES-B688A553'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 323 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:29.818Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Get-API-Custom-Logic-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Get-API-Custom-Logic-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-f306c8c5b162e55f1026",
          "file": "buildingApi.spec.ts",
          "line": 61,
          "column": 5
        },
        {
          "title": "Deploy Functions",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 21,
                  "status": "passed",
                  "duration": 473,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/deploy/functions'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { environment: \u001b[32m'production'\u001b[39m, resourceId: \u001b[32m'RES-B688A553'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 70 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:31.230Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Deploy-Functions-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "9434df3c51644fdb7118-864cf0b0aa689d881b8f",
          "file": "buildingApi.spec.ts",
          "line": 73,
          "column": 5
        },
        {
          "title": "Update API Custom Logic",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 21,
                  "status": "failed",
                  "duration": 567,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:92:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:92:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/newapi/logic/RES-B688A553'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      languageTag: \u001b[32m'nodejs'\u001b[39m,\n      remoteEndpoint: [],\n      resourceLogic: \u001b[32m\"var%20reqPayload%20=%20yprequest.body;%0Avar%20reqParams%20=%20yprequest.params;%0A/*%20Your%20Logic%20Goes%20Here%20*/%20%0Aypresponse.body%20=%20'Hello%20from%20Yappes';%20%0Aypresponse.status%20=%20200;%20%0Aypresponse.headers%5B'Content-Type'%5D='application/json';%20%20\"\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 272 - ms\n"
                    },
                    {
                      "text": "\u001b[33m502\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:31.837Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Update-API-Custom-Logic-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Update-API-Custom-Logic-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-a676c102e3f3fa717d19",
          "file": "buildingApi.spec.ts",
          "line": 86,
          "column": 5
        },
        {
          "title": "Delete API Custom Logic",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 26,
                  "status": "failed",
                  "duration": 473,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:101:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:101:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/newapi/logic/RES-B688A553'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "DELETE - API response time <><><><><><><><><><><><><><><><>   :: 58 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:33.640Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Delete-API-Custom-Logic-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Delete-API-Custom-Logic-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-c8d15848a4083ef2801f",
          "file": "buildingApi.spec.ts",
          "line": 95,
          "column": 5
        },
        {
          "title": "Insert Security Key Data",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 28,
                  "status": "passed",
                  "duration": 840,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/api/API-B351E477/remotes/securefiles'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      apiId: \u001b[32m'API-B351E477'\u001b[39m,\n      fileName: \u001b[32m'doc.pem'\u001b[39m,\n      fileUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/doc?format=pem&meta=securitkey&id=d9f472020e9dcbeae9458294db2c42ad&apiId=30824431bef1698b1b1d64ecb3257593'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 278 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:35.242Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Insert-Security-Key-Data-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "9434df3c51644fdb7118-f3b4e29441607613dc7e",
          "file": "buildingApi.spec.ts",
          "line": 106,
          "column": 5
        },
        {
          "title": "Get Security Key Data",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 28,
                  "status": "passed",
                  "duration": 621,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/api/API-B351E477/remotes/securefiles'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 196 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:36.253Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Get-Security-Key-Data-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "9434df3c51644fdb7118-ceacaccc27758aa1afd6",
          "file": "buildingApi.spec.ts",
          "line": 119,
          "column": 5
        },
        {
          "title": "Delete Security Key Data",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 28,
                  "status": "failed",
                  "duration": 13089,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:139:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:139:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/api/API-B351E477/remotes/securefiles/SKF-D0E0912D'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "DELETE - API response time <><><><><><><><><><><><><><><><>   :: 12822 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:36.890Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Delete-Security-Key-Data-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Delete-Security-Key-Data-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-a1992ad0161920b22009",
          "file": "buildingApi.spec.ts",
          "line": 133,
          "column": 5
        },
        {
          "title": "Remote EndPoints POST",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 47,
                  "status": "failed",
                  "duration": 442,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:149:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:149:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/api/API-6E2AA3F3/remotes'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      name: \u001b[32m'remote_store_test'\u001b[39m,\n      type: \u001b[32m'store'\u001b[39m,\n      description: \u001b[32m'Store as remote endpoint data source'\u001b[39m,\n      logicCodeName: \u001b[32m'abcABC123'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 69 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:50.652Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Remote-EndPoints-POST-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Remote-EndPoints-POST-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-e566a8d5602b88ce246a",
          "file": "buildingApi.spec.ts",
          "line": 143,
          "column": 5
        },
        {
          "title": "Custom API Logic POST",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 49,
                  "status": "failed",
                  "duration": 406,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:161:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:161:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/newapi/logic/RES-C28B3160'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      apiId: \u001b[32m'apiId'\u001b[39m,\n      resourceLogic: \u001b[32m\"function(){var x = ['a','b','c']; console.log(x);\"\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 62 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:51.901Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Custom-API-Logic-POST-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Custom-API-Logic-POST-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-4a4100dab5584663b613",
          "file": "buildingApi.spec.ts",
          "line": 155,
          "column": 5
        },
        {
          "title": "Get API Error info",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 51,
                  "status": "failed",
                  "duration": 422,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:173:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:173:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/apis/API-B351E477/errorinfo'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 63 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:53.149Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Get-API-Error-info-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Get-API-Error-info-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-21f1ec139faa92a7c36e",
          "file": "buildingApi.spec.ts",
          "line": 167,
          "column": 5
        },
        {
          "title": "Update API Error Info",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 53,
                  "status": "failed",
                  "duration": 346,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.PUT (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:197:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:185:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.PUT (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:197:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:185:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/apis/API-B351E477/errorinfo/ERR-218593A2'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { logLevel: \u001b[32m'error'\u001b[39m, userLevel: \u001b[32m'dev'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >502\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:54.383Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Update-API-Error-Info-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Update-API-Error-Info-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-c4479e0b2663802cdc45",
          "file": "buildingApi.spec.ts",
          "line": 181,
          "column": 5
        },
        {
          "title": "Remote EndPoints PUT",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 56,
                  "status": "failed",
                  "duration": 458,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.PUT (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:197:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:197:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.PUT (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:197:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/buildingApi.spec.ts:197:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/api/API-6E2AA3F3/remotes/REP-51BD0247'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      name: \u001b[32m'Nishi_Update'\u001b[39m,\n      description: \u001b[32m'MySQL as remote endpoint data source'\u001b[39m,\n      logicCodeName: \u001b[32m'aabcABC1233'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >502\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:55.737Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Remote-EndPoints-PUT-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/buildingApi-Remote-EndPoints-PUT-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "9434df3c51644fdb7118-852c9638c78d6a3d8e85",
          "file": "buildingApi.spec.ts",
          "line": 193,
          "column": 5
        }
      ]
    },
    {
      "title": "commonAPI.spec.ts",
      "file": "commonAPI.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Get APIs Added to the Organization",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "status": "passed",
                  "duration": 359,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/organization/api/addedlist'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { organizationId: \u001b[32m'ORG-427315B8'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{ organizationId: \u001b[32m'ORG-427315B8'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 113 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { apisForDiscovery: [ \u001b[33m0\u001b[39m, \u001b[33m9\u001b[39m, \u001b[33m8\u001b[39m, \u001b[33m7\u001b[39m ] } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:30.054Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/commonAPI-Get-APIs-Added-to-the-Organization-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "2ae9b067dd2184a1d7c6-dc0cb2829aaf5da8669e",
          "file": "commonAPI.spec.ts",
          "line": 13,
          "column": 5
        }
      ]
    },
    {
      "title": "connectors.spec.ts",
      "file": "connectors.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Create Connector",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 18,
                  "status": "failed",
                  "duration": 329,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:21:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:21:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/connectors/CTR-4B37CFA1'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      connectorName: \u001b[32m'MEGA'\u001b[39m,\n      connectorTags: \u001b[32m'travel entertainment educational'\u001b[39m,\n      description: \u001b[32m'STORAGE PLATFORM'\u001b[39m,\n      functions: \u001b[36m[Object]\u001b[39m,\n      configurations: \u001b[36m[Object]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 99 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:30.428Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Create-Connector-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Create-Connector-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "15e2df881d3af7b5bec7-9ab1439dd3a899069e20",
          "file": "connectors.spec.ts",
          "line": 15,
          "column": 5
        },
        {
          "title": "Update A connector relations",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 22,
                  "status": "failed",
                  "duration": 416,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:34:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:34:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/api/API-C84F3E883/connectors/CTR-05D19400'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { configurationDetails: \u001b[36m[Object]\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 56 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:31.600Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Update-A-connector-relations-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Update-A-connector-relations-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "15e2df881d3af7b5bec7-d766fc92b03dad02609b",
          "file": "connectors.spec.ts",
          "line": 28,
          "column": 5
        },
        {
          "title": "Get a Connector relation",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 24,
                  "status": "failed",
                  "duration": 543,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:47:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:47:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/api/API-C84F3E83/connectors/CRL-C348E158'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 90 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:33.364Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Get-a-Connector-relation-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Get-a-Connector-relation-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "15e2df881d3af7b5bec7-7310a0e89dccb0d1a0ac",
          "file": "connectors.spec.ts",
          "line": 41,
          "column": 5
        },
        {
          "title": "Get A Connector details",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 27,
                  "status": "failed",
                  "duration": 669,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:60:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:60:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{ endPoint: \u001b[32m'/api/content/connectors/CTR-05D19400'\u001b[39m, statusCode: \u001b[32m'200'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 119 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:35.002Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Get-A-Connector-details-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Get-A-Connector-details-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "15e2df881d3af7b5bec7-d47ad28e0a3f9a64e2b6",
          "file": "connectors.spec.ts",
          "line": 54,
          "column": 5
        },
        {
          "title": "Get Connectors List for API",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 30,
                  "status": "failed",
                  "duration": 528,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:73:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:73:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/api/API-C84F3E83/connectorslist'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 70 - ms\n"
                    },
                    {
                      "text": "\u001b[33m500\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:37.085Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Get-Connectors-List-for-API-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Get-Connectors-List-for-API-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "15e2df881d3af7b5bec7-6d64869ff8e84ba9f4e4",
          "file": "connectors.spec.ts",
          "line": 67,
          "column": 5
        },
        {
          "title": "Get All Connectors",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 33,
                  "status": "failed",
                  "duration": 495,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:86:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:86:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{ endPoint: \u001b[32m'/api/content/connectors/meta'\u001b[39m, statusCode: \u001b[32m'200'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 93 - ms\n"
                    },
                    {
                      "text": "\u001b[33m500\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:38.815Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Get-All-Connectors-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Get-All-Connectors-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "15e2df881d3af7b5bec7-fffc8d4a156347c8f147",
          "file": "connectors.spec.ts",
          "line": 80,
          "column": 5
        },
        {
          "title": "Create connector relation with API",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 36,
                  "status": "failed",
                  "duration": 544,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:101:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:101:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/api/API-C84F3E883/connectors/CTR-05D19400'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { configurationDetails: {} }\n  }\n]\n"
                    },
                    {
                      "text": "{ configurationDetails: {} }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 130 - ms\n"
                    },
                    {
                      "text": "\u001b[33m500\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:40.262Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Create-connector-relation-with-API-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Create-connector-relation-with-API-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "15e2df881d3af7b5bec7-55a6ab279dc07c95ac12",
          "file": "connectors.spec.ts",
          "line": 93,
          "column": 5
        },
        {
          "title": "Update Connector",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 38,
                  "status": "failed",
                  "duration": 488,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:117:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:117:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/connectors/'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      connectorName: \u001b[32m'MEGA'\u001b[39m,\n      connectorTags: \u001b[32m'travel entertainment'\u001b[39m,\n      description: \u001b[32m'streaming platform'\u001b[39m,\n      functions: \u001b[36m[Object]\u001b[39m,\n      configurations: \u001b[36m[Object]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  connectorName: \u001b[32m'MEGA'\u001b[39m,\n  connectorTags: \u001b[32m'travel entertainment'\u001b[39m,\n  description: \u001b[32m'streaming platform'\u001b[39m,\n  functions: { clrscr: \u001b[33m1\u001b[39m },\n  configurations: { config: \u001b[33m1\u001b[39m }\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 73 - ms\n"
                    },
                    {
                      "text": "\u001b[33m500\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:41.816Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Update-Connector-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Update-Connector-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "15e2df881d3af7b5bec7-6c2a954513da656d14d5",
          "file": "connectors.spec.ts",
          "line": 109,
          "column": 5
        },
        {
          "title": "Delete Shared Resources",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 40,
                  "status": "failed",
                  "duration": 248,
                  "error": {
                    "message": "TypeError: Cannot read properties of undefined (reading 'endPoint')",
                    "stack": "TypeError: Cannot read properties of undefined (reading 'endPoint')\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:128:40",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts",
                      "column": 40,
                      "line": 128
                    },
                    "snippet": "\u001b[0m \u001b[90m 126 |\u001b[39m     \u001b[36mconst\u001b[39m requestBody\u001b[33m=\u001b[39m dataset[\u001b[32m'DeleteSharedResources'\u001b[39m]\n \u001b[90m 127 |\u001b[39m     console\u001b[33m.\u001b[39mlog(requestBody)\u001b[33m;\u001b[39m    \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 128 |\u001b[39m     \u001b[36mconst\u001b[39m url\u001b[33m=\u001b[39m\u001b[32m`${baseUrl}${requestBody.endPoint}`\u001b[39m \n \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 129 |\u001b[39m     \u001b[36mconst\u001b[39m _response\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m global\u001b[33m.\u001b[39mapiUtil\u001b[33m.\u001b[39m\u001b[33mDELETE\u001b[39m(request\u001b[33m,\u001b[39m\u001b[32m`${url}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 130 |\u001b[39m     console\u001b[33m.\u001b[39mlog(_response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 131 |\u001b[39m     \u001b[36mawait\u001b[39m global\u001b[33m.\u001b[39mapiUtil\u001b[33m.\u001b[39mverifyStatusCode(_response\u001b[33m,\u001b[39mrequestBody\u001b[33m.\u001b[39mstatusCode)\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts",
                        "column": 40,
                        "line": 128
                      },
                      "message": "TypeError: Cannot read properties of undefined (reading 'endPoint')\n\n\u001b[0m \u001b[90m 126 |\u001b[39m     \u001b[36mconst\u001b[39m requestBody\u001b[33m=\u001b[39m dataset[\u001b[32m'DeleteSharedResources'\u001b[39m]\n \u001b[90m 127 |\u001b[39m     console\u001b[33m.\u001b[39mlog(requestBody)\u001b[33m;\u001b[39m    \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 128 |\u001b[39m     \u001b[36mconst\u001b[39m url\u001b[33m=\u001b[39m\u001b[32m`${baseUrl}${requestBody.endPoint}`\u001b[39m \n \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 129 |\u001b[39m     \u001b[36mconst\u001b[39m _response\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m global\u001b[33m.\u001b[39mapiUtil\u001b[33m.\u001b[39m\u001b[33mDELETE\u001b[39m(request\u001b[33m,\u001b[39m\u001b[32m`${url}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 130 |\u001b[39m     console\u001b[33m.\u001b[39mlog(_response\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 131 |\u001b[39m     \u001b[36mawait\u001b[39m global\u001b[33m.\u001b[39mapiUtil\u001b[33m.\u001b[39mverifyStatusCode(_response\u001b[33m,\u001b[39mrequestBody\u001b[33m.\u001b[39mstatusCode)\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts:128:40\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "\u001b[90mundefined\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:43.518Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Delete-Shared-Resources-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/connectors-Delete-Shared-Resources-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/connectors.spec.ts",
                    "column": 40,
                    "line": 128
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "15e2df881d3af7b5bec7-ecced74b6e594d234d7e",
          "file": "connectors.spec.ts",
          "line": 125,
          "column": 5
        }
      ]
    },
    {
      "title": "dashboard.spec.ts",
      "file": "dashboard.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Get All Organisation Drop Down",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 35,
                  "status": "failed",
                  "duration": 480,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/dashboard.spec.ts:21:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/dashboard.spec.ts:21:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/useraccess/orglist'\u001b[39m,\n    requestbody: {}\n  }\n]\n"
                    },
                    {
                      "text": "{}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 75 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:40.091Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/dashboard-Get-All-Organisation-Drop-Down-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/dashboard-Get-All-Organisation-Drop-Down-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "90cda532ab82d274b30b-06a0e647d0ac9fb62668",
          "file": "dashboard.spec.ts",
          "line": 13,
          "column": 5
        },
        {
          "title": "Get Top10-API-Metric",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 37,
                  "status": "passed",
                  "duration": 613,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/provider/dashboards/analytics'\u001b[39m,\n    requestbody: { dashboardType: \u001b[32m'analytics'\u001b[39m, kpis: \u001b[36m[Array]\u001b[39m, timePeriod: \u001b[36m[Object]\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  dashboardType: \u001b[32m'analytics'\u001b[39m,\n  kpis: [ \u001b[32m'top-api-metric'\u001b[39m ],\n  timePeriod: { startDate: \u001b[32m'2021-06-01'\u001b[39m, endDate: \u001b[32m'2021-06-30'\u001b[39m }\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 117 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: [] }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:41.482Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/dashboard-Get-Top10-API-Metric-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "90cda532ab82d274b30b-5c839a779b7752a2e1fc",
          "file": "dashboard.spec.ts",
          "line": 28,
          "column": 5
        },
        {
          "title": "Get Marketplace Details",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 37,
                  "status": "passed",
                  "duration": 437,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/dashboard/marketplace'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {}\n  }\n]\n"
                    },
                    {
                      "text": "{}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 109 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    apiStats: {\n      TotalAPI: \u001b[33m444\u001b[39m,\n      PublishedAPI: \u001b[33m48\u001b[39m,\n      UnpublishedAPI: \u001b[33m393\u001b[39m,\n      DecommissionedAPI: \u001b[33m3\u001b[39m\n    },\n    subscriptionStats: { totalNumbers: \u001b[33m98\u001b[39m, activeNumbers: \u001b[33m78\u001b[39m },\n    message: \u001b[32m'successfully retrieved marketplace data.'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "message  is :: successfully retrieved marketplace data.\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:42.256Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/dashboard-Get-Marketplace-Details-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "90cda532ab82d274b30b-a8e9b55886e7881a70f1",
          "file": "dashboard.spec.ts",
          "line": 43,
          "column": 5
        },
        {
          "title": "Get Organisation Details",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 37,
                  "status": "passed",
                  "duration": 532,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/dashboard/organization'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {}\n  }\n]\n"
                    },
                    {
                      "text": "{}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 192 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    userStats: { totalNumbers: \u001b[33m21\u001b[39m, activeNumbers: \u001b[33m19\u001b[39m, inactiveNumbers: \u001b[33m0\u001b[39m },\n    organizationStats: { totalNumbers: \u001b[33m51\u001b[39m, internalType: \u001b[33m23\u001b[39m, externalType: \u001b[33m26\u001b[39m },\n    organizationSpecificData: [ \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m ],\n    apiStats: [ \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m ]\n  }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:42.704Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/dashboard-Get-Organisation-Details-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "90cda532ab82d274b30b-dd0a8df258fb1361cc3a",
          "file": "dashboard.spec.ts",
          "line": 59,
          "column": 5
        }
      ]
    },
    {
      "title": "existingApi_ApiDetails.spec.ts",
      "file": "existingApi_ApiDetails.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Get Api Details",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 34,
                  "status": "failed",
                  "duration": 324,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:20:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:20:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/definitions/API-6A536A7D'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 65 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:41.566Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Get-Api-Details-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Get-Api-Details-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-605edf70d62f38c464d8",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 14,
          "column": 5
        },
        {
          "title": "Get Tags",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 39,
                  "status": "passed",
                  "duration": 575,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{ endPoint: \u001b[32m'/api/content/tags'\u001b[39m, statusCode: \u001b[32m'200'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 102 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    { tagId: \u001b[32m'TAG-14265800'\u001b[39m, tagName: \u001b[32m'sdfsdf'\u001b[39m, logoUrl: \u001b[1mnull\u001b[22m },\n    { tagId: \u001b[32m'TAG-3E16EE5C'\u001b[39m, tagName: \u001b[32m'customtag2'\u001b[39m, logoUrl: \u001b[1mnull\u001b[22m },\n    { tagId: \u001b[32m'TAG-49E63DF1'\u001b[39m, tagName: \u001b[32m'forexapi'\u001b[39m, logoUrl: \u001b[1mnull\u001b[22m },\n    { tagId: \u001b[32m'TAG-9B038C72'\u001b[39m, tagName: \u001b[32m'transactionapi'\u001b[39m, logoUrl: \u001b[1mnull\u001b[22m },\n    { tagId: \u001b[32m'TAG-E0F4CE84'\u001b[39m, tagName: \u001b[32m'customtag1'\u001b[39m, logoUrl: \u001b[1mnull\u001b[22m },\n    { tagId: \u001b[32m'TAG-F85F55A2'\u001b[39m, tagName: \u001b[32m'N'\u001b[39m, logoUrl: \u001b[1mnull\u001b[22m }\n  ]\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:42.925Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Get-Tags-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-9924b4d8c59b7837d45f",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 26,
          "column": 5
        },
        {
          "title": "POST get relevant articles",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 39,
                  "status": "passed",
                  "duration": 398,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/help/relevance'\u001b[39m,\n    requestbody: {\n      viewPath: \u001b[32m'/updateExistingApi/update/info@yappes.com/API-1D661A7A'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 116 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      _id: \u001b[32m'661626b2396df7cff8ef6391'\u001b[39m,\n      viewName: \u001b[32m' Update Existing API'\u001b[39m,\n      viewPath: \u001b[32m'/updateExistingApi/update/{emailId}/{apiId}'\u001b[39m,\n      videoUrl: \u001b[32m'https://www.youtube.com/watch?v=uVJFZDFNu-I'\u001b[39m,\n      videoTitle: \u001b[32m'Onboard & Update Existing API'\u001b[39m,\n      relevanceArticleSets: \u001b[36m[Array]\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:43.640Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-POST-get-relevant-articles-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-2be837b8d2cbcf8c180b",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 38,
          "column": 5
        },
        {
          "title": "Update Api",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 39,
                  "status": "failed",
                  "duration": 370,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:56:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:56:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/definitions/API-CDF8BFC0'\u001b[39m,\n    requestbody: {\n      apiName: \u001b[32m'tcheckKK'\u001b[39m,\n      baseUrl: \u001b[32m'https://jsonplaceholder.typicode.com/'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      availability: \u001b[32m'public'\u001b[39m,\n      status: \u001b[32m'unpublished'\u001b[39m,\n      organizationId: \u001b[32m'ORG-9C2D5B74'\u001b[39m,\n      publishingDomainType: \u001b[32m'proxy'\u001b[39m,\n      customDomainValue: \u001b[32m'proxy'\u001b[39m,\n      operation: \u001b[32m'update'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 92 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:44.048Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Update-Api-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Update-Api-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-6cebe0b863972cc73467",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 50,
          "column": 5
        },
        {
          "title": "Api Logo Url Update",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 42,
                  "status": "failed",
                  "duration": 412,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:72:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:72:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/definitions/logo/API-CDF8BFC0'\u001b[39m,\n    requestbody: {\n      logoUrl: \u001b[32m'http://storageapi.yappes.local:98/serve/files/API-1D661A7A_api_logo?format=png&meta=api&id=d9f472020e9dcbeae9458294db2c42ad&apiId=c8a065812b910c93a5a5712bf64ee629'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 67 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:45.135Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Api-Logo-Url-Update-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Api-Logo-Url-Update-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-4bc089fb9958f0263c58",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 66,
          "column": 5
        },
        {
          "title": "PUT api ownership change",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 43,
                  "status": "failed",
                  "duration": 410,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:81:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:81:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/user/owner/apitransfer/API-CDF8BFC0'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { userIdentifier: \u001b[32m'info@yappes.com'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 89 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:46.374Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-PUT-api-ownership-change-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-PUT-api-ownership-change-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-3d5db60879533c681e8b",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 75,
          "column": 5
        },
        {
          "title": "PUT Api ownership change associated to organization",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 44,
                  "status": "failed",
                  "duration": 435,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:93:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:93:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/user/organization/apitransfer/API-5049C67A'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      userIdentifier: \u001b[32m'snehilbanerji@gmail.com'\u001b[39m,\n      organizationId: \u001b[32m'ORG-C8737901'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 66 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:47.607Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-PUT-824b9--associated-to-organization-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-PUT-824b9--associated-to-organization-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-7d1f5dae02060f7a7a27",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 87,
          "column": 5
        },
        {
          "title": "DELETE delete api",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 46,
                  "status": "failed",
                  "duration": 988,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:105:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:105:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{ endPoint: \u001b[32m'/api/content/user/api/API-43456C8C'\u001b[39m, statusCode: \u001b[32m'200'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "DELETE - API response time <><><><><><><><><><><><><><><><>   :: 683 - ms\n"
                    },
                    {
                      "text": "\u001b[33m502\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:48.927Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-DELETE-delete-api-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-DELETE-delete-api-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-f20849137121e2bdc37f",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 99,
          "column": 5
        },
        {
          "title": "Reactivate deprecated API versions.",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 48,
                  "status": "failed",
                  "duration": 490,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 400  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27m00\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 400  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27m00\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:115:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 400  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27m00\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:115:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/reactivate/apiversion'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiId: \u001b[32m'API-2ED6C64F'\u001b[39m, version: \u001b[32m'10.0.0'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 151 - ms\n"
                    },
                    {
                      "text": "\u001b[33m400\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:50.683Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Reactivate-deprecated-API-versions--chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Reactivate-deprecated-API-versions--chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-cada664035146820f984",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 109,
          "column": 5
        },
        {
          "title": "Upload",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 50,
                  "status": "failed",
                  "duration": 454,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:127:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:127:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/media/USR-183152C2'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {}\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 112 - ms\n"
                    },
                    {
                      "text": "\u001b[33m500\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:51.960Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Upload-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Upload-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-fed41344f8e604647395",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 121,
          "column": 5
        },
        {
          "title": "Detect Changes",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 52,
                  "status": "passed",
                  "duration": 451,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/user/notifyChange/API-6A04D058'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {}\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 69 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, result: \u001b[32m'yes'\u001b[39m, status: \u001b[32m'ok'\u001b[39m }\n"
                    },
                    {
                      "text": "[ \u001b[32m'ok'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:53.232Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Detect-Changes-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-3aacdc90ea7e24318d69",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 133,
          "column": 5
        },
        {
          "title": "get All Organization DropDown",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 52,
                  "status": "passed",
                  "duration": 277,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/useraccess/orglist'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { userId: \u001b[32m'USR-183152C2'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 64 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      organizationId: \u001b[32m'ORG-9C2D5B74'\u001b[39m,\n      roleId: \u001b[32m'CRLE-0E6AE716'\u001b[39m,\n      organizationName: \u001b[32m'Yappes Organization'\u001b[39m,\n      roleName: \u001b[32m'platform-admin'\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-AF165344'\u001b[39m,\n      roleId: \u001b[32m'CRLE-346EC166'\u001b[39m,\n      organizationName: \u001b[32m'NewAPIPartnerOrg'\u001b[39m,\n      roleName: \u001b[32m'owner'\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-5D9A1D46'\u001b[39m,\n      roleId: \u001b[32m'CRLE-346EC166'\u001b[39m,\n      organizationName: \u001b[32m'PaymentTech'\u001b[39m,\n      roleName: \u001b[32m'owner'\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-7D5C244C'\u001b[39m,\n      roleId: \u001b[32m'CRLE-346EC166'\u001b[39m,\n      organizationName: \u001b[32m'Whatsapp Client'\u001b[39m,\n      roleName: \u001b[32m'owner'\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-C168BDEB'\u001b[39m,\n      roleId: \u001b[32m'CRLE-346EC166'\u001b[39m,\n      organizationName: \u001b[32m'GenericExternalUsers'\u001b[39m,\n      roleName: \u001b[32m'owner'\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-DD836BE5'\u001b[39m,\n      roleId: \u001b[32m'CRLE-346EC166'\u001b[39m,\n      organizationName: \u001b[32m'LOS'\u001b[39m,\n      roleName: \u001b[32m'owner'\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-22FB8ACF'\u001b[39m,\n      roleId: \u001b[32m'CRLE-346EC166'\u001b[39m,\n      organizationName: \u001b[32m'LOS Consumer1'\u001b[39m,\n      roleName: \u001b[32m'owner'\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-CF1F49E2'\u001b[39m,\n      roleId: \u001b[32m'CRLE-346EC166'\u001b[39m,\n      organizationName: \u001b[32m'UPW Partner'\u001b[39m,\n      roleName: \u001b[32m'owner'\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-785CFC52'\u001b[39m,\n      roleId: \u001b[32m'CRLE-346EC166'\u001b[39m,\n      organizationName: \u001b[32m'upwork vendor'\u001b[39m,\n      roleName: \u001b[32m'owner'\u001b[39m\n    },\n    {\n      organizationId: \u001b[32m'ORG-E78D6DAE'\u001b[39m,\n      roleId: \u001b[32m'CRLE-346EC166'\u001b[39m,\n      organizationName: \u001b[32m'org check '\u001b[39m,\n      roleName: \u001b[32m'owner'\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:53.806Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-get-All-Organization-DropDown-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-4223f29aaeedfa4626fd",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 145,
          "column": 5
        },
        {
          "title": "deprecate API versions",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 52,
                  "status": "failed",
                  "duration": 551,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:163:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:163:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/deprecate/apiversion'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      apiId: \u001b[32m'API-2ED6C64F'\u001b[39m,\n      version: \u001b[32m'8.0.0'\u001b[39m,\n      deprecatedDetails: \u001b[36m[Object]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 326 - ms\n"
                    },
                    {
                      "text": "\u001b[33m502\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:54.094Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-deprecate-API-versions-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-deprecate-API-versions-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-3eba1f6c28048d7b8f89",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 157,
          "column": 5
        },
        {
          "title": "Decommission And Reactive API",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 54,
                  "status": "failed",
                  "duration": 468,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:173:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:173:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/api/retire/API-2ED6C64F'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {}\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >502\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:55.529Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Decommission-And-Reactive-API-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-Decommission-And-Reactive-API-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-3dc67f23c0f011a48ebc",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 169,
          "column": 5
        },
        {
          "title": "retire an API",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 58,
                  "status": "failed",
                  "duration": 488,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:185:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/existingApi_ApiDetails.spec.ts:185:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/api/retire/API-2ED6C64F'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      apiId: \u001b[32m'API-2ED6C64F'\u001b[39m,\n      action: \u001b[32m'reactivate'\u001b[39m,\n      deprecatedDetails: \u001b[36m[Object]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >503\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:57.325Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-retire-an-API-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/existingApi_ApiDetails-retire-an-API-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "02083eb7f9562e7c1ab0-b22174fd4613fc3086a0",
          "file": "existingApi_ApiDetails.spec.ts",
          "line": 181,
          "column": 5
        }
      ]
    },
    {
      "title": "FirstTest.spec.ts",
      "file": "FirstTest.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "First Test ",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 37,
                  "status": "timedOut",
                  "duration": 30390,
                  "error": {
                    "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m",
                    "stack": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                  },
                  "errors": [
                    {
                      "message": "\u001b[31mTest timeout of 30000ms exceeded.\u001b[39m"
                    },
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/FirstTest.spec.ts",
                        "column": 93,
                        "line": 13
                      },
                      "message": "Error: locator.innerText: Test timeout of 30000ms exceeded.\nCall log:\n  \u001b[2m- waiting for locator('//span[@class=\\'mantine-1ryt1ht mantine-Button-label\\']/div')\u001b[22m\n\n\n\u001b[0m \u001b[90m 11 |\u001b[39m   \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m\"//*[@class='mantine-1ryt1ht mantine-Button-label']\"\u001b[39m)\u001b[33m.\u001b[39mclick()\u001b[33m;\u001b[39m\n \u001b[90m 12 |\u001b[39m   \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForTimeout(\u001b[35m4000\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m   \u001b[36mconst\u001b[39m txt\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mlocator(\u001b[32m\"//span[@class='mantine-1ryt1ht mantine-Button-label']/div\"\u001b[39m)\u001b[33m.\u001b[39minnerText()\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 14 |\u001b[39m   console\u001b[33m.\u001b[39mlog(\u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mgetByText(\u001b[32m\"Kalyan\"\u001b[39m)\u001b[33m.\u001b[39minnerText())\u001b[33m;\u001b[39m\n \u001b[90m 15 |\u001b[39m   expect(\u001b[32m\"kalyan\\nplatform-admin\"\u001b[39m\u001b[33m,\u001b[39m\u001b[32m\"message is displaywing and successfully loging .....\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 16 |\u001b[39m   \u001b[36mawait\u001b[39m getRowsAndColumns(page)\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/FirstTest.spec.ts:13:93\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:43.253Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/FirstTest-First-Test--chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/FirstTest-First-Test--chromium/trace.zip"
                    }
                  ]
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "20ce3c7bb92cf7b1e529-8dc24a76409bc441644c",
          "file": "FirstTest.spec.ts",
          "line": 6,
          "column": 5
        }
      ]
    },
    {
      "title": "gatewayPolicy.spec.ts",
      "file": "gatewayPolicy.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Get  Group Attached monitor policy",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 41,
                  "status": "passed",
                  "duration": 481,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/monitor/attachedpolicies'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { groupId: \u001b[32m'GRP-D327'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 101 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: [] }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:44.796Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-Get-Group-Attached-monitor-policy-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc81e6386081083bd91c-c025dee69dccbad319d2",
          "file": "gatewayPolicy.spec.ts",
          "line": 13,
          "column": 5
        },
        {
          "title": "Group  monitor policy attach",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 41,
                  "status": "passed",
                  "duration": 317,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/monitor/policyattach'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      policyId: \u001b[36m[Array]\u001b[39m,\n      attachId: \u001b[32m'GRP-D327'\u001b[39m,\n      provisionType: \u001b[32m'api-groups'\u001b[39m,\n      moduleType: \u001b[32m'api-monitor'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 97 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m404\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No Policy Attached'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": ">>>>>>>>>>>>> ::No Policy Attached\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:45.399Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-Group-monitor-policy-attach-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc81e6386081083bd91c-874ea4e99b37f3aab507",
          "file": "gatewayPolicy.spec.ts",
          "line": 25,
          "column": 5
        },
        {
          "title": "Remove Group attached monitor  policy.",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 41,
                  "status": "passed",
                  "duration": 326,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  statusCode: \u001b[32m'200'\u001b[39m,\n  endPoint: \u001b[32m'/api/content/provider/monitor/policydeattach'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "DELETE - API response time <><><><><><><><><><><><><><><><>   :: 122 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: { message: \u001b[32m'Provisioned Policy Detached successfully '\u001b[39m }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": ">>>>>>>>>>>>> ::Provisioned Policy Detached successfully \n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:45.724Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-Remove-Group-attached-monitor-policy--chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc81e6386081083bd91c-8a7af54f3092f540620b",
          "file": "gatewayPolicy.spec.ts",
          "line": 39,
          "column": 5
        },
        {
          "title": "GET all policy list",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 41,
                  "status": "passed",
                  "duration": 350,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{ endPoint: \u001b[32m'/api/content/provider/policy'\u001b[39m, statusCode: \u001b[32m'200'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 121 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      policyId: \u001b[32m'POL-CE6856E8'\u001b[39m,\n      policyName: \u001b[32m'pritu'\u001b[39m,\n      description: \u001b[32m'ergergegerger'\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-27599C25'\u001b[39m,\n      policyName: \u001b[32m'YDM76'\u001b[39m,\n      description: \u001b[32m'Description'\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-637FD091'\u001b[39m,\n      policyName: \u001b[32m'svvvvvvvvv'\u001b[39m,\n      description: \u001b[32m'ugvygv'\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'whitelist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-8C2348C8'\u001b[39m,\n      policyName: \u001b[32m'whilepublic'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'whitelist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-5F35F76D'\u001b[39m,\n      policyName: \u001b[32m'public'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'blacklist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-E9BDA7A5'\u001b[39m,\n      policyName: \u001b[32m'dfsd'\u001b[39m,\n      description: \u001b[32m'sdf'\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'message_signature'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-FD511AC4'\u001b[39m,\n      policyName: \u001b[32m'cbtrhrottle'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-2366D466'\u001b[39m,\n      policyName: \u001b[32m'URLLL'\u001b[39m,\n      description: \u001b[32m'DDD'\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'message_signature'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-9DC9B071'\u001b[39m,\n      policyName: \u001b[32m'dghdgj'\u001b[39m,\n      description: \u001b[32m'ghfghf'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-156186CF'\u001b[39m,\n      policyName: \u001b[32m'dfdsf'\u001b[39m,\n      description: \u001b[32m'dsdsffc'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'blacklist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-7739A234'\u001b[39m,\n      policyName: \u001b[32m'sadas'\u001b[39m,\n      description: \u001b[32m'dffde'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'whitelist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-A6E3D065'\u001b[39m,\n      policyName: \u001b[32m'SIGNATURE'\u001b[39m,\n      description: \u001b[32m'SGSGDHF'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'message_signature'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-FC84D228'\u001b[39m,\n      policyName: \u001b[32m'Message'\u001b[39m,\n      description: \u001b[32m'fffffff'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'message_signature'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-B1FAC7C3'\u001b[39m,\n      policyName: \u001b[32m'Black'\u001b[39m,\n      description: \u001b[32m'fff'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'blacklist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-2D1400DF'\u001b[39m,\n      policyName: \u001b[32m'whitepolicy'\u001b[39m,\n      description: \u001b[32m'dddd'\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'whitelist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-E94EAA27'\u001b[39m,\n      policyName: \u001b[32m'hhhhhhhh'\u001b[39m,\n      description: \u001b[32m'hhhh'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'whitelist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-11B2E2BE'\u001b[39m,\n      policyName: \u001b[32m'chandanip'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'blacklist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-ABA4594F'\u001b[39m,\n      policyName: \u001b[32m'addresssss'\u001b[39m,\n      description: \u001b[32m'bdhfdgsssss'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'blacklist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-664FEC7D'\u001b[39m,\n      policyName: \u001b[32m'signatureee'\u001b[39m,\n      description: \u001b[32m'fgdgdgdgeee'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'message_signature'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-47B691EE'\u001b[39m,\n      policyName: \u001b[32m'tttt'\u001b[39m,\n      description: \u001b[32m'gddgdg'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-BF9BE2A4'\u001b[39m,\n      policyName: \u001b[32m'thyyhy'\u001b[39m,\n      description: \u001b[32m'dfdfdg'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-EDE3C436'\u001b[39m,\n      policyName: \u001b[32m'thrott'\u001b[39m,\n      description: \u001b[32m'hdhdhgdhdhd'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-48C345B7'\u001b[39m,\n      policyName: \u001b[32m'atl01'\u001b[39m,\n      description: \u001b[32m''\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-E186F022'\u001b[39m,\n      policyName: \u001b[32m'new gateway policy'\u001b[39m,\n      description: \u001b[32m'check sub'\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-7D0A6D2D'\u001b[39m,\n      policyName: \u001b[32m'Hello Analytics'\u001b[39m,\n      description: \u001b[32m'ffffff'\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-7150E7FD'\u001b[39m,\n      policyName: \u001b[32m'gnfdvcs'\u001b[39m,\n      description: \u001b[32m'dfsdf'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'whitelist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-BFC539B2'\u001b[39m,\n      policyName: \u001b[32m'gggggggyyyjjttt'\u001b[39m,\n      description: \u001b[32m'ggggyyyytttt'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'whitelist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-37194BDD'\u001b[39m,\n      policyName: \u001b[32m'hellllloooo'\u001b[39m,\n      description: \u001b[32m'hhhhhh'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'message_signature'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-0803BB6A'\u001b[39m,\n      policyName: \u001b[32m'gggg'\u001b[39m,\n      description: \u001b[32m'gggg'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'blacklist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-9B0F073E'\u001b[39m,\n      policyName: \u001b[32m'helloooooo'\u001b[39m,\n      description: \u001b[32m'ddgg'\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'blacklist_ip'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-2529ABDF'\u001b[39m,\n      policyName: \u001b[32m'gatway'\u001b[39m,\n      description: \u001b[32m'fgcnfghfg'\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-493891DA'\u001b[39m,\n      policyName: \u001b[32m'gatewaywwww'\u001b[39m,\n      description: \u001b[32m'2222333333333333'\u001b[39m,\n      policyAttached: \u001b[33mtrue\u001b[39m,\n      policyType: \u001b[32m'throttling'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    },\n    {\n      policyId: \u001b[32m'POL-9B91C517'\u001b[39m,\n      policyName: \u001b[32m'dfsdfh'\u001b[39m,\n      description: \u001b[32m'This is test update.zxcvdsfsdf'\u001b[39m,\n      policyAttached: \u001b[33mfalse\u001b[39m,\n      policyType: \u001b[32m'whitelist'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:46.056Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-GET-all-policy-list-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc81e6386081083bd91c-7e6c846ffbbc7c8cee7a",
          "file": "gatewayPolicy.spec.ts",
          "line": 53,
          "column": 5
        },
        {
          "title": "DELETE policy",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 41,
                  "status": "passed",
                  "duration": 305,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/provider/policy/POL-41556AF2'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "DELETE - API response time <><><><><><><><><><><><><><><><>   :: 92 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "Response data message is <><> :: No data found.\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:46.412Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-DELETE-policy-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc81e6386081083bd91c-fdaea78afd3db3d35a06",
          "file": "gatewayPolicy.spec.ts",
          "line": 65,
          "column": 5
        },
        {
          "title": "ADD policy",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 41,
                  "status": "passed",
                  "duration": 311,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/policy'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { policyName: \u001b[32m'test3'\u001b[39m, policyType: \u001b[32m'whitelist'\u001b[39m, configs: \u001b[36m[Object]\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 103 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: { message: \u001b[32m'Policy added successfully '\u001b[39m }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:46.723Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-ADD-policy-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc81e6386081083bd91c-498157bf7b1148d387c5",
          "file": "gatewayPolicy.spec.ts",
          "line": 81,
          "column": 5
        },
        {
          "title": "UPDATE policy",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 41,
                  "status": "failed",
                  "duration": 284,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/gatewayPolicy.spec.ts:99:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/gatewayPolicy.spec.ts:99:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/policy/POL-0E6670CC'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      policyId: \u001b[32m'POL-0E6670CC'\u001b[39m,\n      policyName: \u001b[32m'test3'\u001b[39m,\n      policyType: \u001b[32m'whitelist'\u001b[39m,\n      configs: \u001b[36m[Object]\u001b[39m,\n      description: \u001b[32m'This is test update.'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 57 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:47.039Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-UPDATE-policy-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-UPDATE-policy-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cc81e6386081083bd91c-336801a2a4e207715b1e",
          "file": "gatewayPolicy.spec.ts",
          "line": 93,
          "column": 5
        },
        {
          "title": "Attach gateway policy at api-group",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 45,
                  "status": "failed",
                  "duration": 6530,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/gatewayPolicy.spec.ts:115:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 502  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"502\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/gatewayPolicy.spec.ts:115:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/gateway/policyattach'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      policyId: \u001b[32m'POL-222AF26D'\u001b[39m,\n      attachId: \u001b[32m'GRP-15C0'\u001b[39m,\n      provisionType: \u001b[32m'api-groups'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 6144 - ms\n"
                    },
                    {
                      "text": "\u001b[33m502\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:48.036Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-Attach-gateway-policy-at-api-group-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-Attach-gateway-policy-at-api-group-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cc81e6386081083bd91c-bde8b980cf71b5096157",
          "file": "gatewayPolicy.spec.ts",
          "line": 109,
          "column": 5
        },
        {
          "title": "GET allattachedentity",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 55,
                  "status": "failed",
                  "duration": 452,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.GET (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:153:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/gatewayPolicy.spec.ts:125:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.GET (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:153:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/gatewayPolicy.spec.ts:125:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/provider/policy/allattachedentity/POL-5E43049B'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >502\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:55.518Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-GET-allattachedentity-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/gatewayPolicy-GET-allattachedentity-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cc81e6386081083bd91c-5a4caa2a60381b6c9d70",
          "file": "gatewayPolicy.spec.ts",
          "line": 121,
          "column": 5
        }
      ]
    },
    {
      "title": "mysubscriptions.spec.ts",
      "file": "mysubscriptions.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Get cumulative metrics for error code",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 57,
                  "status": "failed",
                  "duration": 516,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.GET (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:153:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:17:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.GET (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:153:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:17:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/connect/providers/USR-83BEAEBE/apilists'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >503\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:57.241Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-cumulative-metrics-for-error-code-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-cumulative-metrics-for-error-code-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cc5029e287b92b800f45-5f32bed14f93b62cd958",
          "file": "mysubscriptions.spec.ts",
          "line": 13,
          "column": 5
        },
        {
          "title": "Get Curl Data for Subscription",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 60,
                  "status": "failed",
                  "duration": 482,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:31:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:31:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/consumer/subscription/curldata'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiDealType: \u001b[32m'individualApi'\u001b[39m, subscriptionId: \u001b[32m'SCB-D72DCD8C'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >503\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:59.071Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-Curl-Data-for-Subscription-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-Curl-Data-for-Subscription-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cc5029e287b92b800f45-5f26907afadad8e5c0f8",
          "file": "mysubscriptions.spec.ts",
          "line": 27,
          "column": 5
        },
        {
          "title": "Get All Subscription -- iteration - 1 ",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 64,
                  "status": "failed",
                  "duration": 463,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:43:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:43:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/API/connect/consumers/subscribed/USR-E6903E9D'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiDealType: \u001b[32m'individualApi'\u001b[39m, organizationId: \u001b[32m'ORG-9C2D5B74'\u001b[39m }\n  },\n  {\n    endPoint: \u001b[32m'/API/connect/consumers/subscribed/USR-E6903E9D'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiDealType: \u001b[32m'apiGroup'\u001b[39m, organizationId: \u001b[32m'ORG-9C2D5B74'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >503\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:00.734Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-All-Subscription----iteration---1--chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-All-Subscription----iteration---1--chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cc5029e287b92b800f45-5dc693fe84c75165ae3e",
          "file": "mysubscriptions.spec.ts",
          "line": 39,
          "column": 5
        },
        {
          "title": "Get All Subscription -- iteration - 2 ",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 67,
                  "status": "failed",
                  "duration": 496,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:43:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:43:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/API/connect/consumers/subscribed/USR-E6903E9D'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiDealType: \u001b[32m'individualApi'\u001b[39m, organizationId: \u001b[32m'ORG-9C2D5B74'\u001b[39m }\n  },\n  {\n    endPoint: \u001b[32m'/API/connect/consumers/subscribed/USR-E6903E9D'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiDealType: \u001b[32m'apiGroup'\u001b[39m, organizationId: \u001b[32m'ORG-9C2D5B74'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >502\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:02.397Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-All-Subscription----iteration---2--chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-All-Subscription----iteration---2--chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cc5029e287b92b800f45-72a6ea63f7e67c1b79e1",
          "file": "mysubscriptions.spec.ts",
          "line": 39,
          "column": 5
        },
        {
          "title": "Curl Preview Consumers",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 70,
                  "status": "failed",
                  "duration": 569,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:59:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:59:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/connect/consumers/api/preview/RES-AC993130?apiId=API-8E5A094A&version=1.5.0'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 111 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:04.186Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Curl-Preview-Consumers-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Curl-Preview-Consumers-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cc5029e287b92b800f45-97b468b0873d122fdfb3",
          "file": "mysubscriptions.spec.ts",
          "line": 53,
          "column": 5
        },
        {
          "title": "Add Review",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 73,
                  "status": "passed",
                  "duration": 663,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/review/rating/API-8E5A094A'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { organizationId: \u001b[32m'ORG-4389C54A'\u001b[39m, review: \u001b[32m'ss'\u001b[39m, rating: \u001b[33m5\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 141 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m401\u001b[39m,\n  status: \u001b[33m401\u001b[39m,\n  name: \u001b[32m'invalid-resource-access'\u001b[39m,\n  message: \u001b[32m'Invalid Resource Access.'\u001b[39m\n}\n"
                    },
                    {
                      "text": "[ \u001b[33m401\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:06.048Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Add-Review-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc5029e287b92b800f45-7d3c659092e2bf17198b",
          "file": "mysubscriptions.spec.ts",
          "line": 67,
          "column": 5
        },
        {
          "title": "Get Reviews",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 73,
                  "status": "passed",
                  "duration": 496,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/review/rating/API-1030A645'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 161 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "Response data message is <><> :: No data found.\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:06.881Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-Reviews-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc5029e287b92b800f45-040d102c4577018434e6",
          "file": "mysubscriptions.spec.ts",
          "line": 79,
          "column": 5
        },
        {
          "title": "Update Review",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 73,
                  "status": "failed",
                  "duration": 366,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:101:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/mysubscriptions.spec.ts:101:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/review/rating/user/REV-15E34316'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { review: \u001b[32m'updated again'\u001b[39m, rating: \u001b[33m3\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 66 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:07.388Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Update-Review-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Update-Review-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "cc5029e287b92b800f45-6abff4fa480a0026aa8e",
          "file": "mysubscriptions.spec.ts",
          "line": 95,
          "column": 5
        },
        {
          "title": "Get User Reviews",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 76,
                  "status": "passed",
                  "duration": 652,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  endPoint: \u001b[32m'/api/content/review/rating/user/API-24DD4FA6'\u001b[39m,\n  statusCode: \u001b[32m'200'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 107 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "Response message >>>> :::: \n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:09.035Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-User-Reviews-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc5029e287b92b800f45-de68d62efc795a2e97f2",
          "file": "mysubscriptions.spec.ts",
          "line": 107,
          "column": 5
        },
        {
          "title": "Get Specification For Download",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 76,
                  "status": "passed",
                  "duration": 437,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/specifications/download'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { type: \u001b[32m'yappesdef'\u001b[39m, apiId: \u001b[32m'API-EAE312FE'\u001b[39m, version: \u001b[32m'latest'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 131 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:09.880Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-Specification-For-Download-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc5029e287b92b800f45-5cbbaeaff1ae318a66b6",
          "file": "mysubscriptions.spec.ts",
          "line": 123,
          "column": 5
        },
        {
          "title": "Get All Attached Policy",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 76,
                  "status": "passed",
                  "duration": 481,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/gateway/fetchpolicyattach'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { subscriberId: \u001b[32m'SCB-2CE31FA2'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 112 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:10.327Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-All-Attached-Policy-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc5029e287b92b800f45-6ccc863026c12b761c32",
          "file": "mysubscriptions.spec.ts",
          "line": 135,
          "column": 5
        },
        {
          "title": "Get Application Keys",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 76,
                  "status": "passed",
                  "duration": 540,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{ endPoint: \u001b[32m'/api/content/users/appkeys'\u001b[39m, statusCode: \u001b[32m'200'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 217 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    appSets: [\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m\n    ],\n    message: \u001b[32m'Application Keys Sets Found'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "Response message >>>> :::: \n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:10.827Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-Application-Keys-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc5029e287b92b800f45-d842a3fd54713710cad2",
          "file": "mysubscriptions.spec.ts",
          "line": 147,
          "column": 5
        },
        {
          "title": "Fetch Subscription Details",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 76,
                  "status": "passed",
                  "duration": 444,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{ endPoint: \u001b[32m'/api/content/consumers/subscriptiondetails/SCB-E0B72E59'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 123 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    },
                    {
                      "text": "Response message >>>> :::: \n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:11.378Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Fetch-Subscription-Details-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc5029e287b92b800f45-d980e93bc740d5d891c3",
          "file": "mysubscriptions.spec.ts",
          "line": 163,
          "column": 5
        },
        {
          "title": "Get AllSubscribed Organization Details",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 76,
                  "status": "passed",
                  "duration": 442,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/connect/consumers/subscribed/organizationlist/USR-183152C2'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiDealType: \u001b[32m'individualApi'\u001b[39m, userId: \u001b[32m'USR-183152C2'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 131 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      organizationName: \u001b[32m'Yappes Organization'\u001b[39m,\n      organizationId: \u001b[32m'ORG-9C2D5B74'\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:11.830Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-AllSubscribed-Organization-Details-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc5029e287b92b800f45-292e4651deba09c0a9a6",
          "file": "mysubscriptions.spec.ts",
          "line": 179,
          "column": 5
        },
        {
          "title": "Get remaining Tryouts",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 76,
                  "status": "passed",
                  "duration": 405,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/get/tryouts'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiId: \u001b[32m'API-0BE60A26'\u001b[39m, userId: \u001b[32m'USR-FB99F9D9'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 60 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No data found.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:12.281Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Get-remaining-Tryouts-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc5029e287b92b800f45-9cce4ca6bf6463521733",
          "file": "mysubscriptions.spec.ts",
          "line": 191,
          "column": 5
        },
        {
          "title": "Added APIName",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 76,
                  "status": "passed",
                  "duration": 485,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/provider/apigroups/addedapiname'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: { apiGroupId: \u001b[32m''\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 113 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{ code: \u001b[33m200\u001b[39m, status: \u001b[32m'OK'\u001b[39m, data: { message: \u001b[32m'No API created.'\u001b[39m } }\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:12.697Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/mysubscriptions-Added-APIName-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "cc5029e287b92b800f45-0b4331dc1eb49abe997b",
          "file": "mysubscriptions.spec.ts",
          "line": 203,
          "column": 5
        }
      ]
    },
    {
      "title": "publicApis1.spec.ts",
      "file": "publicApis1.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Public API View",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 59,
                  "status": "failed",
                  "duration": 451,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/publicApis1.spec.ts:19:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/publicApis1.spec.ts:19:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/public/apiview'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      apiId: \u001b[32m'f3c339a0dd8a8d6d68273ad9df2f19fc'\u001b[39m,\n      client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n      client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  apiId: \u001b[32m'f3c339a0dd8a8d6d68273ad9df2f19fc'\u001b[39m,\n  client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n  client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >503\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:57.535Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-Public-API-View-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-Public-API-View-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "53122d5eb6408aafcbe6-272122591d4ba3535ee7",
          "file": "publicApis1.spec.ts",
          "line": 13,
          "column": 5
        },
        {
          "title": "Get API by Name",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 62,
                  "status": "failed",
                  "duration": 448,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/publicApis1.spec.ts:34:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/publicApis1.spec.ts:34:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/public/apiname/list'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      searchName: \u001b[32m'de'\u001b[39m,\n      index: \u001b[33m0\u001b[39m,\n      boundary: \u001b[33m10\u001b[39m,\n      client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n      client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  searchName: \u001b[32m'de'\u001b[39m,\n  index: \u001b[33m0\u001b[39m,\n  boundary: \u001b[33m10\u001b[39m,\n  client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n  client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >503\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:59.192Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-Get-API-by-Name-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-Get-API-by-Name-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "53122d5eb6408aafcbe6-88a50bfa6b618bb50d7f",
          "file": "publicApis1.spec.ts",
          "line": 28,
          "column": 5
        },
        {
          "title": "Public Tags GET",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 65,
                  "status": "failed",
                  "duration": 454,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/publicApis1.spec.ts:49:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/publicApis1.spec.ts:49:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/public/tags'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      boundary: \u001b[32m'all'\u001b[39m,\n      client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n      client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  boundary: \u001b[32m'all'\u001b[39m,\n  client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n  client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >503\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:00.882Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-Public-Tags-GET-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-Public-Tags-GET-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "53122d5eb6408aafcbe6-b12431685fe6a0d0e82b",
          "file": "publicApis1.spec.ts",
          "line": 43,
          "column": 5
        },
        {
          "title": "Public API GET",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 68,
                  "status": "failed",
                  "duration": 484,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/publicApis1.spec.ts:64:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/publicApis1.spec.ts:64:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/public/apilist'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      tags: \u001b[32m'travel'\u001b[39m,\n      index: \u001b[33m1\u001b[39m,\n      boundary: \u001b[33m10\u001b[39m,\n      client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n      client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  tags: \u001b[32m'travel'\u001b[39m,\n  index: \u001b[33m1\u001b[39m,\n  boundary: \u001b[33m10\u001b[39m,\n  client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n  client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >502\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:02.509Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-Public-API-GET-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-Public-API-GET-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "53122d5eb6408aafcbe6-f294914d27e2a2e457b4",
          "file": "publicApis1.spec.ts",
          "line": 58,
          "column": 5
        },
        {
          "title": "POST Fetch Api list according to Api Name",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 71,
                  "status": "passed",
                  "duration": 576,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/public/apiname/list'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      searchName: \u001b[32m''\u001b[39m,\n      index: \u001b[33m0\u001b[39m,\n      boundary: \u001b[33m9\u001b[39m,\n      client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n      client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  searchName: \u001b[32m''\u001b[39m,\n  index: \u001b[33m0\u001b[39m,\n  boundary: \u001b[33m9\u001b[39m,\n  client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n  client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 97 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "[\n  {\n    apiId: \u001b[32m'8f01aa038ce374b97fe64ad71163133b'\u001b[39m,\n    apiName: \u001b[32m'test54'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'7558f18a1e53830f0d1093d851480a6b'\u001b[39m,\n    apiName: \u001b[32m'INS KYC API01'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'fc8e6c30e4d922021dcea7bcc10aef26'\u001b[39m,\n    apiName: \u001b[32m'info'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'afd7b876d79cf2a77a5ce7d58bfe9e8e'\u001b[39m,\n    apiName: \u001b[32m'CB Bank API02'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'47cdfd1debcebc37e0b476b2ae75d4a3'\u001b[39m,\n    apiName: \u001b[32m'VN API01'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'19b63f86b4b62e01f43ad36609990361'\u001b[39m,\n    apiName: \u001b[32m'ECL KYCAPI01'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m'Get Data about API'\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'853450c725ddb5531f25d6ff404e2be7'\u001b[39m,\n    apiName: \u001b[32m'new API'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m'gshg'\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'6ed100ad00899b61170df4080882a4aa'\u001b[39m,\n    apiName: \u001b[32m'fasgsgdh'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m'hfjgjghkgkhlh'\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'7e2af8a7a1bccbd536665ae66844d067'\u001b[39m,\n    apiName: \u001b[32m'NV API01'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:04.232Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-POST-Fetch-Api-list-according-to-Api-Name-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "53122d5eb6408aafcbe6-f6b985c3a85d58d561a2",
          "file": "publicApis1.spec.ts",
          "line": 73,
          "column": 5
        },
        {
          "title": "POST categories preview",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 71,
                  "status": "passed",
                  "duration": 376,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/public/tags'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n      client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n  client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 84 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "[\n  { tagName: \u001b[32m'customtag1'\u001b[39m },\n  { tagName: \u001b[32m'customtag2'\u001b[39m },\n  { tagName: \u001b[32m'forexapi'\u001b[39m },\n  { tagName: \u001b[32m'N'\u001b[39m },\n  { tagName: \u001b[32m'sdfsdf'\u001b[39m },\n  { tagName: \u001b[32m'transactionapi'\u001b[39m }\n]\n"
                    },
                    {
                      "text": "[]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:04.973Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-POST-categories-preview-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "53122d5eb6408aafcbe6-fc8db92a3ebbff2ec8eb",
          "file": "publicApis1.spec.ts",
          "line": 88,
          "column": 5
        },
        {
          "title": "POST apiView preview",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 71,
                  "status": "failed",
                  "duration": 365,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/publicApis1.spec.ts:111:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/publicApis1.spec.ts:111:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/public/apiview'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      apiId: \u001b[32m'6ae1cba3e24de8fc172de84d9f5275c8'\u001b[39m,\n      client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n      client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  apiId: \u001b[32m'6ae1cba3e24de8fc172de84d9f5275c8'\u001b[39m,\n  client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n  client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 64 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:05.360Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-POST-apiView-preview-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-POST-apiView-preview-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "53122d5eb6408aafcbe6-f23b12dd828e3188c811",
          "file": "publicApis1.spec.ts",
          "line": 103,
          "column": 5
        },
        {
          "title": "POST apiList Preview",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 74,
                  "status": "passed",
                  "duration": 574,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/public/apilist'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      tags: \u001b[32m'sdfsdf'\u001b[39m,\n      index: \u001b[33m1\u001b[39m,\n      boundary: \u001b[33m10\u001b[39m,\n      client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n      client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  tags: \u001b[32m'sdfsdf'\u001b[39m,\n  index: \u001b[33m1\u001b[39m,\n  boundary: \u001b[33m10\u001b[39m,\n  client_id: \u001b[32m'15baf8a50c0c653b47b4df9cee458e2d1a6ae226a27c4bf7e9871d387eb95106'\u001b[39m,\n  client_secret: \u001b[32m'cc62bc8020cfa4c73661fcb92671962adc5ba3d9afcf60c9b44aa4a691246797'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 83 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "[\n  {\n    apiId: \u001b[32m'23e0091dfe3b3a771274c61f03663705'\u001b[39m,\n    apiName: \u001b[32m'basepathcheck'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.integration.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'f641f3579316f807008e422e9f8bd7e9'\u001b[39m,\n    apiName: \u001b[32m'intebasesachin'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.integration.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'47cdfd1debcebc37e0b476b2ae75d4a3'\u001b[39m,\n    apiName: \u001b[32m'VN API01'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'1ef04e1aaa6c4ca98799a17a594b0b9e'\u001b[39m,\n    apiName: \u001b[32m'Path API01'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'8f01aa038ce374b97fe64ad71163133b'\u001b[39m,\n    apiName: \u001b[32m'test54'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'f8bbeb8502bd07337df67da6ea8262e9'\u001b[39m,\n    apiName: \u001b[32m'Rahukll'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m'ddd'\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'6ed100ad00899b61170df4080882a4aa'\u001b[39m,\n    apiName: \u001b[32m'fasgsgdh'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m'hfjgjghkgkhlh'\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'6d24ff4254374c2a99e6338252776ba4'\u001b[39m,\n    apiName: \u001b[32m'test4'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'd27a65c1c3b111fcd05bc1454b93eb39'\u001b[39m,\n    apiName: \u001b[32m'TestBlock12'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  },\n  {\n    apiId: \u001b[32m'5a65086ca836092ec80346623c79fe7d'\u001b[39m,\n    apiName: \u001b[32m'jsonplaceholder1'\u001b[39m,\n    logoUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=api'\u001b[39m,\n    description: \u001b[32m''\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:06.870Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/publicApis1-POST-apiList-Preview-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "53122d5eb6408aafcbe6-ec887d5a8ee0a7c9ad1e",
          "file": "publicApis1.spec.ts",
          "line": 118,
          "column": 5
        }
      ]
    },
    {
      "title": "sharedResources.spec.ts",
      "file": "sharedResources.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Create Shared Resources",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 61,
                  "status": "failed",
                  "duration": 481,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/sharedResources.spec.ts:21:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.POST (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:176:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/sharedResources.spec.ts:21:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/shared/resources/custom-ssl-certificate'\u001b[39m,\n    requestbody: {\n      resourceName: \u001b[32m'Cert3'\u001b[39m,\n      description: \u001b[32m'Cert3'\u001b[39m,\n      resourceType: \u001b[32m'custom-ssl-certificate'\u001b[39m,\n      uploadedCertificateName: \u001b[32m'Cert333'\u001b[39m,\n      uploadedCertificateUrl: \u001b[32m'https://Cert1.url'\u001b[39m,\n      passphrase: \u001b[32m'123'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  resourceName: \u001b[32m'Cert3'\u001b[39m,\n  description: \u001b[32m'Cert3'\u001b[39m,\n  resourceType: \u001b[32m'custom-ssl-certificate'\u001b[39m,\n  uploadedCertificateName: \u001b[32m'Cert333'\u001b[39m,\n  uploadedCertificateUrl: \u001b[32m'https://Cert1.url'\u001b[39m,\n  passphrase: \u001b[32m'123'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >503\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:12:59.013Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/sharedResources-Create-Shared-Resources-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/sharedResources-Create-Shared-Resources-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "bd244809df15c9f1dc6a-103a741bd569518b80ab",
          "file": "sharedResources.spec.ts",
          "line": 15,
          "column": 5
        },
        {
          "title": "Get All Shared Resources",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 63,
                  "status": "failed",
                  "duration": 474,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.GET (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:153:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/sharedResources.spec.ts:35:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.GET (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:153:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/sharedResources.spec.ts:35:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  statusCode: \u001b[32m'200'\u001b[39m,\n  endPoint: \u001b[32m'/api/content/shared/resources/custom-ssl-certificate'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >503\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:00.707Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/sharedResources-Get-All-Shared-Resources-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/sharedResources-Get-All-Shared-Resources-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "bd244809df15c9f1dc6a-20a6089b03b490e84f66",
          "file": "sharedResources.spec.ts",
          "line": 31,
          "column": 5
        },
        {
          "title": "Update Shared Resources",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 66,
                  "status": "failed",
                  "duration": 450,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\n    at ApiUtil.PUT (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:197:24)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/sharedResources.spec.ts:48:21",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 38,
                      "line": 134
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 38,
                        "line": 134
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:134\n\n\u001b[0m \u001b[90m 132 |\u001b[39m         console\u001b[33m.\u001b[39mlog(\u001b[32m\"Token status code is ***************** - >\"\u001b[39m \u001b[33m+\u001b[39m loginResponse\u001b[33m.\u001b[39mstatus())\u001b[33m;\u001b[39m\n \u001b[90m 133 |\u001b[39m         \u001b[90m//veryfy response\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 |\u001b[39m         expect((loginResponse)\u001b[33m.\u001b[39mok())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 135 |\u001b[39m         \u001b[36mconst\u001b[39m loginResponseJson\u001b[33m=\u001b[39m\u001b[36mawait\u001b[39m loginResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 136 |\u001b[39m         \u001b[36mconst\u001b[39m token\u001b[33m=\u001b[39mloginResponseJson\u001b[33m.\u001b[39maccess_token\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 137 |\u001b[39m         \u001b[36mreturn\u001b[39m token\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.getToken (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:134:38)\u001b[22m\n\u001b[2m    at ApiUtil.PUT (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:197:24)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/sharedResources.spec.ts:48:21\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/shared/resources/custom-ssl-certificate/64465992e14ec80d959ab578'\u001b[39m,\n    requestbody: { organizationId: \u001b[32m'ORG-BBED4611C'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >502\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:02.319Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/sharedResources-Update-Shared-Resources-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/sharedResources-Update-Shared-Resources-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 38,
                    "line": 134
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "bd244809df15c9f1dc6a-fd4bd66536ed8426f226",
          "file": "sharedResources.spec.ts",
          "line": 44,
          "column": 5
        },
        {
          "title": "Delete Shared Resources",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 69,
                  "status": "failed",
                  "duration": 629,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/sharedResources.spec.ts:63:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 500  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m5\u001b[27m00\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/sharedResources.spec.ts:63:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "{\n  statusCode: \u001b[32m'200'\u001b[39m,\n  endPoint: \u001b[32m'/api/content/shared/resources/custom-ssl-certificate/64465992e14ec80d959ab578'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "DELETE - API response time <><><><><><><><><><><><><><><><>   :: 149 - ms\n"
                    },
                    {
                      "text": "\u001b[33m500\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:03.848Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/sharedResources-Delete-Shared-Resources-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/sharedResources-Delete-Shared-Resources-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "bd244809df15c9f1dc6a-3fe4d34e2db3160063e5",
          "file": "sharedResources.spec.ts",
          "line": 57,
          "column": 5
        }
      ]
    },
    {
      "title": "stvtermlocaletest.spec.ts",
      "file": "stvtermlocaletest.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "API - json path example",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 72,
                  "status": "passed",
                  "duration": 298,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "\u001b[90mundefined\u001b[39m\n"
                    },
                    {
                      "text": "[ \u001b[32m'Nigel Rees'\u001b[39m, \u001b[32m'Evelyn Waugh'\u001b[39m, \u001b[32m'Herman Melville'\u001b[39m, \u001b[32m'J. R. R. Tolkien'\u001b[39m ]\n"
                    },
                    {
                      "text": "[ \u001b[32m'Nigel Rees'\u001b[39m, \u001b[32m'Evelyn Waugh'\u001b[39m, \u001b[32m'Herman Melville'\u001b[39m, \u001b[32m'J. R. R. Tolkien'\u001b[39m ]\n"
                    },
                    {
                      "text": "[ \u001b[32m'Nigel Rees'\u001b[39m, \u001b[32m'Evelyn Waugh'\u001b[39m, \u001b[32m'Herman Melville'\u001b[39m, \u001b[32m'J. R. R. Tolkien'\u001b[39m ]\n"
                    },
                    {
                      "text": "[\n  [\n    {\n      category: \u001b[32m'reference'\u001b[39m,\n      author: \u001b[32m'Nigel Rees'\u001b[39m,\n      title: \u001b[32m'Sayings of the Century'\u001b[39m,\n      price: \u001b[33m8.95\u001b[39m\n    },\n    {\n      category: \u001b[32m'fiction'\u001b[39m,\n      author: \u001b[32m'Evelyn Waugh'\u001b[39m,\n      title: \u001b[32m'Sword of Honour'\u001b[39m,\n      price: \u001b[33m12.99\u001b[39m\n    },\n    {\n      category: \u001b[32m'fiction'\u001b[39m,\n      author: \u001b[32m'Herman Melville'\u001b[39m,\n      title: \u001b[32m'Moby Dick'\u001b[39m,\n      isbn: \u001b[32m'0-553-21311-3'\u001b[39m,\n      price: \u001b[33m8.99\u001b[39m\n    },\n    {\n      category: \u001b[32m'fiction'\u001b[39m,\n      author: \u001b[32m'J. R. R. Tolkien'\u001b[39m,\n      title: \u001b[32m'The Lord of the Rings'\u001b[39m,\n      isbn: \u001b[32m'0-395-19395-8'\u001b[39m,\n      price: \u001b[33m22.99\u001b[39m\n    }\n  ],\n  { color: \u001b[32m'red'\u001b[39m, price: \u001b[33m19.95\u001b[39m }\n]\n"
                    },
                    {
                      "text": "[ \u001b[33m8.95\u001b[39m, \u001b[33m12.99\u001b[39m, \u001b[33m8.99\u001b[39m, \u001b[33m22.99\u001b[39m, \u001b[33m19.95\u001b[39m ]\n"
                    },
                    {
                      "text": "[\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'Herman Melville'\u001b[39m,\n    title: \u001b[32m'Moby Dick'\u001b[39m,\n    isbn: \u001b[32m'0-553-21311-3'\u001b[39m,\n    price: \u001b[33m8.99\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'J. R. R. Tolkien'\u001b[39m,\n    title: \u001b[32m'The Lord of the Rings'\u001b[39m,\n    isbn: \u001b[32m'0-395-19395-8'\u001b[39m,\n    price: \u001b[33m22.99\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'J. R. R. Tolkien'\u001b[39m,\n    title: \u001b[32m'The Lord of the Rings'\u001b[39m,\n    isbn: \u001b[32m'0-395-19395-8'\u001b[39m,\n    price: \u001b[33m22.99\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[\n  {\n    category: \u001b[32m'reference'\u001b[39m,\n    author: \u001b[32m'Nigel Rees'\u001b[39m,\n    title: \u001b[32m'Sayings of the Century'\u001b[39m,\n    price: \u001b[33m8.95\u001b[39m\n  },\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'Evelyn Waugh'\u001b[39m,\n    title: \u001b[32m'Sword of Honour'\u001b[39m,\n    price: \u001b[33m12.99\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[\n  {\n    category: \u001b[32m'reference'\u001b[39m,\n    author: \u001b[32m'Nigel Rees'\u001b[39m,\n    title: \u001b[32m'Sayings of the Century'\u001b[39m,\n    price: \u001b[33m8.95\u001b[39m\n  },\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'Evelyn Waugh'\u001b[39m,\n    title: \u001b[32m'Sword of Honour'\u001b[39m,\n    price: \u001b[33m12.99\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'Herman Melville'\u001b[39m,\n    title: \u001b[32m'Moby Dick'\u001b[39m,\n    isbn: \u001b[32m'0-553-21311-3'\u001b[39m,\n    price: \u001b[33m8.99\u001b[39m\n  },\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'J. R. R. Tolkien'\u001b[39m,\n    title: \u001b[32m'The Lord of the Rings'\u001b[39m,\n    isbn: \u001b[32m'0-395-19395-8'\u001b[39m,\n    price: \u001b[33m22.99\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[\n  {\n    category: \u001b[32m'reference'\u001b[39m,\n    author: \u001b[32m'Nigel Rees'\u001b[39m,\n    title: \u001b[32m'Sayings of the Century'\u001b[39m,\n    price: \u001b[33m8.95\u001b[39m\n  },\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'Herman Melville'\u001b[39m,\n    title: \u001b[32m'Moby Dick'\u001b[39m,\n    isbn: \u001b[32m'0-553-21311-3'\u001b[39m,\n    price: \u001b[33m8.99\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[\n  {\n    category: \u001b[32m'reference'\u001b[39m,\n    author: \u001b[32m'Nigel Rees'\u001b[39m,\n    title: \u001b[32m'Sayings of the Century'\u001b[39m,\n    price: \u001b[33m8.95\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'Evelyn Waugh'\u001b[39m,\n    title: \u001b[32m'Sword of Honour'\u001b[39m,\n    price: \u001b[33m12.99\u001b[39m\n  },\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'Herman Melville'\u001b[39m,\n    title: \u001b[32m'Moby Dick'\u001b[39m,\n    isbn: \u001b[32m'0-553-21311-3'\u001b[39m,\n    price: \u001b[33m8.99\u001b[39m\n  },\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'J. R. R. Tolkien'\u001b[39m,\n    title: \u001b[32m'The Lord of the Rings'\u001b[39m,\n    isbn: \u001b[32m'0-395-19395-8'\u001b[39m,\n    price: \u001b[33m22.99\u001b[39m\n  }\n]\n"
                    },
                    {
                      "text": "[\n  {\n    book: [ \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m ],\n    bicycle: { color: \u001b[32m'red'\u001b[39m, price: \u001b[33m19.95\u001b[39m }\n  },\n  [\n    {\n      category: \u001b[32m'reference'\u001b[39m,\n      author: \u001b[32m'Nigel Rees'\u001b[39m,\n      title: \u001b[32m'Sayings of the Century'\u001b[39m,\n      price: \u001b[33m8.95\u001b[39m\n    },\n    {\n      category: \u001b[32m'fiction'\u001b[39m,\n      author: \u001b[32m'Evelyn Waugh'\u001b[39m,\n      title: \u001b[32m'Sword of Honour'\u001b[39m,\n      price: \u001b[33m12.99\u001b[39m\n    },\n    {\n      category: \u001b[32m'fiction'\u001b[39m,\n      author: \u001b[32m'Herman Melville'\u001b[39m,\n      title: \u001b[32m'Moby Dick'\u001b[39m,\n      isbn: \u001b[32m'0-553-21311-3'\u001b[39m,\n      price: \u001b[33m8.99\u001b[39m\n    },\n    {\n      category: \u001b[32m'fiction'\u001b[39m,\n      author: \u001b[32m'J. R. R. Tolkien'\u001b[39m,\n      title: \u001b[32m'The Lord of the Rings'\u001b[39m,\n      isbn: \u001b[32m'0-395-19395-8'\u001b[39m,\n      price: \u001b[33m22.99\u001b[39m\n    }\n  ],\n  { color: \u001b[32m'red'\u001b[39m, price: \u001b[33m19.95\u001b[39m },\n  {\n    category: \u001b[32m'reference'\u001b[39m,\n    author: \u001b[32m'Nigel Rees'\u001b[39m,\n    title: \u001b[32m'Sayings of the Century'\u001b[39m,\n    price: \u001b[33m8.95\u001b[39m\n  },\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'Evelyn Waugh'\u001b[39m,\n    title: \u001b[32m'Sword of Honour'\u001b[39m,\n    price: \u001b[33m12.99\u001b[39m\n  },\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'Herman Melville'\u001b[39m,\n    title: \u001b[32m'Moby Dick'\u001b[39m,\n    isbn: \u001b[32m'0-553-21311-3'\u001b[39m,\n    price: \u001b[33m8.99\u001b[39m\n  },\n  {\n    category: \u001b[32m'fiction'\u001b[39m,\n    author: \u001b[32m'J. R. R. Tolkien'\u001b[39m,\n    title: \u001b[32m'The Lord of the Rings'\u001b[39m,\n    isbn: \u001b[32m'0-395-19395-8'\u001b[39m,\n    price: \u001b[33m22.99\u001b[39m\n  },\n  \u001b[32m'reference'\u001b[39m,\n  \u001b[32m'Nigel Rees'\u001b[39m,\n  \u001b[32m'Sayings of the Century'\u001b[39m,\n  \u001b[33m8.95\u001b[39m,\n  \u001b[32m'fiction'\u001b[39m,\n  \u001b[32m'Evelyn Waugh'\u001b[39m,\n  \u001b[32m'Sword of Honour'\u001b[39m,\n  \u001b[33m12.99\u001b[39m,\n  \u001b[32m'fiction'\u001b[39m,\n  \u001b[32m'Herman Melville'\u001b[39m,\n  \u001b[32m'Moby Dick'\u001b[39m,\n  \u001b[32m'0-553-21311-3'\u001b[39m,\n  \u001b[33m8.99\u001b[39m,\n  \u001b[32m'fiction'\u001b[39m,\n  \u001b[32m'J. R. R. Tolkien'\u001b[39m,\n  \u001b[32m'The Lord of the Rings'\u001b[39m,\n  \u001b[32m'0-395-19395-8'\u001b[39m,\n  \u001b[33m22.99\u001b[39m,\n  \u001b[32m'red'\u001b[39m,\n  \u001b[33m19.95\u001b[39m\n]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:05.674Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/stvtermlocaletest-API---json-path-example-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "46410a9c4a8ade8265ec-429cbb6cd6587831bae7",
          "file": "stvtermlocaletest.spec.ts",
          "line": 11,
          "column": 5
        }
      ]
    },
    {
      "title": "supportArticles.spec.ts",
      "file": "supportArticles.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "PUT Update Article",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 72,
                  "status": "failed",
                  "duration": 529,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/supportArticles.spec.ts:21:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/supportArticles.spec.ts:21:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/admin/support/articleindex/5b9118e9b99ae36d8c0697d7'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      viewName: \u001b[32m'newName'\u001b[39m,\n      viewPath: \u001b[32m'hello/{param}/{param}'\u001b[39m,\n      relevanceArticleSets: \u001b[36m[Array]\u001b[39m,\n      allArticleSets: \u001b[36m[Array]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 74 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:06.146Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/supportArticles-PUT-Update-Article-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/supportArticles-PUT-Update-Article-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "f03e475a567bad882b79-c949cf74fb6f9bf5d3a5",
          "file": "supportArticles.spec.ts",
          "line": 15,
          "column": 5
        },
        {
          "title": "POST Add Article",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 75,
                  "status": "passed",
                  "duration": 684,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/admin/support/articleindex'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {\n      viewName: \u001b[32m'as'\u001b[39m,\n      viewPath: \u001b[32m'as/abcd/{param}'\u001b[39m,\n      relevanceArticleSets: \u001b[36m[Array]\u001b[39m,\n      allArticleSets: \u001b[36m[Array]\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  viewName: \u001b[32m'as'\u001b[39m,\n  viewPath: \u001b[32m'as/abcd/{param}'\u001b[39m,\n  relevanceArticleSets: [\n    {\n      name: \u001b[32m'searchAPI'\u001b[39m,\n      indexLable: \u001b[32m'Search an API'\u001b[39m,\n      videoUrl: \u001b[32m''\u001b[39m,\n      videoTitle: \u001b[32m''\u001b[39m,\n      paragraph: \u001b[32m''\u001b[39m,\n      steps: \u001b[36m[Array]\u001b[39m\n    }\n  ],\n  allArticleSets: [\n    {\n      name: \u001b[32m'searchAPI'\u001b[39m,\n      indexLable: \u001b[32m'Search an API'\u001b[39m,\n      videoUrl: \u001b[32m''\u001b[39m,\n      videoTitle: \u001b[32m''\u001b[39m,\n      paragraph: \u001b[32m''\u001b[39m,\n      steps: \u001b[36m[Array]\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 112 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:07.849Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/supportArticles-POST-Add-Article-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "f03e475a567bad882b79-c510667f53e0b84de839",
          "file": "supportArticles.spec.ts",
          "line": 27,
          "column": 5
        },
        {
          "title": "POST get all relevant articles",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 75,
                  "status": "passed",
                  "duration": 486,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "[\n  {\n    endPoint: \u001b[32m'/api/content/admin/help/relevance'\u001b[39m,\n    statusCode: \u001b[32m'200'\u001b[39m,\n    requestbody: {}\n  }\n]\n"
                    },
                    {
                      "text": "{}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 103 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    data: [\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m,\n      \u001b[36m[Object]\u001b[39m, \u001b[36m[Object]\u001b[39m\n    ],\n    message: \u001b[32m'Articles Loaded'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:08.705Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/supportArticles-POST-get-all-relevant-articles-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "f03e475a567bad882b79-9efb109aadcd465d8c73",
          "file": "supportArticles.spec.ts",
          "line": 43,
          "column": 5
        }
      ]
    },
    {
      "title": "testCases.spec.ts",
      "file": "testCases.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Login to the apploication",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 74,
                  "status": "failed",
                  "duration": 1321,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCases.spec.ts:38:17",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                      "column": 33,
                      "line": 59
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                        "column": 33,
                        "line": 59
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCases.spec.ts:38:17\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:07.612Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCases-Login-to-the-apploication-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCases-Login-to-the-apploication-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                    "column": 33,
                    "line": 59
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "59d20ef80dcda447c0db-9ef865c32e70784e6dfb",
          "file": "testCases.spec.ts",
          "line": 37,
          "column": 5
        },
        {
          "title": "Login to the apploication negative",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 77,
                  "status": "failed",
                  "duration": 1476,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCases.spec.ts:55:17",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                      "column": 33,
                      "line": 59
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                        "column": 33,
                        "line": 59
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCases.spec.ts:55:17\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:09.833Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCases-Login-to-the-apploication-negative-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCases-Login-to-the-apploication-negative-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                    "column": 33,
                    "line": 59
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "59d20ef80dcda447c0db-232f2298fa05dbdd9307",
          "file": "testCases.spec.ts",
          "line": 54,
          "column": 5
        }
      ]
    },
    {
      "title": "testCasesWithCm.spec.ts",
      "file": "testCasesWithCm.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Login to the apploication",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 75,
                  "status": "failed",
                  "duration": 1344,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCasesWithCm.spec.ts:23:30",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                      "column": 33,
                      "line": 59
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                        "column": 33,
                        "line": 59
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCasesWithCm.spec.ts:23:30\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:09.216Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCasesWithCm-Login-to-the-apploication-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCasesWithCm-Login-to-the-apploication-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                    "column": 33,
                    "line": 59
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "57bf2438760ffd6189d7-791094aa2de061a856bc",
          "file": "testCasesWithCm.spec.ts",
          "line": 22,
          "column": 5
        },
        {
          "title": "Createed Mock API -  kalyan1",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 78,
                  "status": "failed",
                  "duration": 1399,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCasesWithCm.spec.ts:40:34",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                      "column": 33,
                      "line": 59
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                        "column": 33,
                        "line": 59
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCasesWithCm.spec.ts:40:34\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:11.428Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCasesWithCm-Createed-Mock-API---kalyan1-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCasesWithCm-Createed-Mock-API---kalyan1-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                    "column": 33,
                    "line": 59
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "57bf2438760ffd6189d7-329956e9ced78f250ec0",
          "file": "testCasesWithCm.spec.ts",
          "line": 39,
          "column": 9
        },
        {
          "title": "Check the grid and delete",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 80,
                  "status": "failed",
                  "duration": 1077,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCasesWithCm.spec.ts:52:30",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                      "column": 33,
                      "line": 59
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                        "column": 33,
                        "line": 59
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCasesWithCm.spec.ts:52:30\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:13.857Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCasesWithCm-Check-the-grid-and-delete-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCasesWithCm-Check-the-grid-and-delete-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                    "column": 33,
                    "line": 59
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "57bf2438760ffd6189d7-6be1f565d8e8f75b4c05",
          "file": "testCasesWithCm.spec.ts",
          "line": 51,
          "column": 5
        },
        {
          "title": "Createed Mock API_1 ::   1",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 82,
                  "status": "failed",
                  "duration": 1271,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCasesWithCm.spec.ts:72:34",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                      "column": 33,
                      "line": 59
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                        "column": 33,
                        "line": 59
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCasesWithCm.spec.ts:72:34\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:15.622Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCasesWithCm-Createed-Mock-API-1-1-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCasesWithCm-Createed-Mock-API-1-1-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                    "column": 33,
                    "line": 59
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "57bf2438760ffd6189d7-013bf541d6348acdc141",
          "file": "testCasesWithCm.spec.ts",
          "line": 71,
          "column": 9
        },
        {
          "title": "Invalid Login",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 85,
                  "status": "failed",
                  "duration": 1062,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCasesWithCm.spec.ts:83:30",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                      "column": 33,
                      "line": 59
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                        "column": 33,
                        "line": 59
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"http://\u001b[7mrx\u001b[27mtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m\nReceived: \u001b[31m\"http\u001b[7ms\u001b[27m://testing.yappes-enterprise.com/login/api-manager\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../pages/login.page.ts:59\n\n\u001b[0m \u001b[90m 57 |\u001b[39m\n \u001b[90m 58 |\u001b[39m     \u001b[36mpublic\u001b[39m \u001b[36masync\u001b[39m login(username\u001b[33m:\u001b[39mstring\u001b[33m,\u001b[39m pass\u001b[33m:\u001b[39mstring){\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 59 |\u001b[39m         expect(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpage\u001b[33m.\u001b[39murl())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"http://rxtesting.yappes-enterprise.com/login/api-manager\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 60 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterUserName(username)\u001b[33m;\u001b[39m\n \u001b[90m 61 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39menterPassword(pass)\u001b[33m;\u001b[39m\n \u001b[90m 62 |\u001b[39m         \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mclickLogBtn()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[2m    at LogingPage.login (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts:59:33)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/testCasesWithCm.spec.ts:83:30\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:17.595Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCasesWithCm-Invalid-Login-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/testCasesWithCm-Invalid-Login-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/pages/login.page.ts",
                    "column": 33,
                    "line": 59
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "57bf2438760ffd6189d7-0d8f14c35ea759be0006",
          "file": "testCasesWithCm.spec.ts",
          "line": 82,
          "column": 5
        }
      ]
    },
    {
      "title": "userProfileAuthentication.spec.ts",
      "file": "userProfileAuthentication.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Authentication",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 79,
                  "status": "failed",
                  "duration": 576,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 400  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27m00\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 400  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27m00\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:23:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 400  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7m2\u001b[27m00\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7m4\u001b[27m00\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:23:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/general/authenticate'\u001b[39m,\n    requestbody: { emailId: \u001b[32m'hariinkpta@gmail.com'\u001b[39m, password: \u001b[32m'qqq'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{ emailId: \u001b[32m'hariinkpta@gmail.com'\u001b[39m, password: \u001b[32m'qqq'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 108 - ms\n"
                    },
                    {
                      "text": "\u001b[33m400\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:12.850Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Authentication-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Authentication-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "b9160ce08d66211c3847-41ee218af0607ed814ed",
          "file": "userProfileAuthentication.spec.ts",
          "line": 15,
          "column": 5
        },
        {
          "title": "Registration",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 81,
                  "status": "failed",
                  "duration": 510,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:40:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:40:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/general/register'\u001b[39m,\n    requestbody: {\n      firstName: \u001b[32m'fn'\u001b[39m,\n      lastName: \u001b[32m'ln'\u001b[39m,\n      password: \u001b[32m'qqq'\u001b[39m,\n      confirmPassword: \u001b[32m'qqq'\u001b[39m,\n      emailId: \u001b[32m'hariinkpta@gmail.com'\u001b[39m,\n      clientIp: \u001b[32m'54.31.43.633'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  firstName: \u001b[32m'fn'\u001b[39m,\n  lastName: \u001b[32m'ln'\u001b[39m,\n  password: \u001b[32m'qqq'\u001b[39m,\n  confirmPassword: \u001b[32m'qqq'\u001b[39m,\n  emailId: \u001b[32m'hariinkpta@gmail.com'\u001b[39m,\n  clientIp: \u001b[32m'54.31.43.633'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 89 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:14.545Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Registration-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Registration-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "b9160ce08d66211c3847-3c983b3b6871b225db72",
          "file": "userProfileAuthentication.spec.ts",
          "line": 32,
          "column": 5
        },
        {
          "title": "Reset Password Link",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 83,
                  "status": "failed",
                  "duration": 401,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:57:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:57:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/general/reset/password/'\u001b[39m,\n    requestbody: { emailId: \u001b[32m'hariinkpta@gmail.com'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{ emailId: \u001b[32m'hariinkpta@gmail.com'\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 61 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:16.000Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Reset-Password-Link-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Reset-Password-Link-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "b9160ce08d66211c3847-8381d0cba01944cfe5dd",
          "file": "userProfileAuthentication.spec.ts",
          "line": 49,
          "column": 5
        },
        {
          "title": "Password Reset",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 84,
                  "status": "failed",
                  "duration": 469,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:74:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:74:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/reset/password/29734198101dd94484d035a06ae195776f67e9cb43751f6c245fa90345f40a66'\u001b[39m,\n    requestbody: {\n      emailId: \u001b[32m'yappestestmail1@gmail.com'\u001b[39m,\n      password: \u001b[32m'qqqq'\u001b[39m,\n      confirmPassword: \u001b[32m'qqqq'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  emailId: \u001b[32m'yappestestmail1@gmail.com'\u001b[39m,\n  password: \u001b[32m'qqqq'\u001b[39m,\n  confirmPassword: \u001b[32m'qqqq'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 67 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:17.400Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Password-Reset-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Password-Reset-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "b9160ce08d66211c3847-023b9a948c2b6bf5d7b7",
          "file": "userProfileAuthentication.spec.ts",
          "line": 66,
          "column": 5
        },
        {
          "title": "Profile View",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 86,
                  "status": "passed",
                  "duration": 473,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  statusCode: \u001b[32m'200'\u001b[39m,\n  endPoint: \u001b[32m'/api/content/profile/yappestestmail@gmail.com'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 62 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    firstName: \u001b[32m'chakarwartyyy'\u001b[39m,\n    lastName: \u001b[32m'maheshwar'\u001b[39m,\n    emailId: \u001b[32m'chakarwarty.m@yappes.com'\u001b[39m,\n    userName: \u001b[32m'chakc8d7'\u001b[39m,\n    profileImageUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=profile'\u001b[39m,\n    needTutor: \u001b[32m'enable'\u001b[39m,\n    companyName: \u001b[32m''\u001b[39m,\n    biographyDetails: \u001b[32m''\u001b[39m,\n    locationDetails: \u001b[32m''\u001b[39m,\n    websiteDetails: \u001b[32m''\u001b[39m,\n    scFacebook: \u001b[32m''\u001b[39m,\n    scLinkedin: \u001b[32m''\u001b[39m,\n    scTwitter: \u001b[32m''\u001b[39m,\n    scStackOverflow: \u001b[32m''\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:18.843Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Profile-View-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "b9160ce08d66211c3847-cf5e98a2d17747b3ed99",
          "file": "userProfileAuthentication.spec.ts",
          "line": 83,
          "column": 5
        },
        {
          "title": "Password Change",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 86,
                  "status": "failed",
                  "duration": 412,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:102:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:102:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/profile/password/info@gmail.com'\u001b[39m,\n    requestbody: { currentPassword: \u001b[32m'qqqq'\u001b[39m, newPassword: \u001b[32m'qqqq'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 123 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:19.433Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Password-Change-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Password-Change-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "b9160ce08d66211c3847-2ed3ea736ca336e1cd3e",
          "file": "userProfileAuthentication.spec.ts",
          "line": 96,
          "column": 5
        },
        {
          "title": "Profile Update",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 87,
                  "status": "failed",
                  "duration": 374,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:115:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:115:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/profile/info@yappes.com'\u001b[39m,\n    requestbody: { firstName: \u001b[32m'devlop'\u001b[39m, lastName: \u001b[32m'testing'\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 59 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:20.485Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Profile-Update-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Profile-Update-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "b9160ce08d66211c3847-44141fbadc671234d134",
          "file": "userProfileAuthentication.spec.ts",
          "line": 109,
          "column": 5
        },
        {
          "title": "Internal Token Validity",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 88,
                  "status": "failed",
                  "duration": 417,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:130:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:130:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/general/token/validity/'\u001b[39m,\n    requestbody: {\n      type: \u001b[32m'profile-activation'\u001b[39m,\n      token: \u001b[32m'cc3c40025880ccdba6814457a7a0e5ccde02c12531eaca5a7bc363ef54c21f42'\u001b[39m\n    }\n  }\n]\n"
                    },
                    {
                      "text": "{\n  type: \u001b[32m'profile-activation'\u001b[39m,\n  token: \u001b[32m'cc3c40025880ccdba6814457a7a0e5ccde02c12531eaca5a7bc363ef54c21f42'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 53 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:21.551Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Internal-Token-Validity-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Internal-Token-Validity-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "b9160ce08d66211c3847-c945ed48d9e6f9f2ee67",
          "file": "userProfileAuthentication.spec.ts",
          "line": 122,
          "column": 5
        },
        {
          "title": "Account Activation Mail",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 89,
                  "status": "failed",
                  "duration": 412,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:147:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 401  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"401\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:147:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/general/activation/mail'\u001b[39m,\n    requestbody: { expiredToken: \u001b[32m''\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "{ expiredToken: \u001b[32m''\u001b[39m }\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "POST - API response time <><><><><><><><><><><><><><><><>   :: 100 - ms\n"
                    },
                    {
                      "text": "\u001b[33m401\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:22.668Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Account-Activation-Mail-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Account-Activation-Mail-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "b9160ce08d66211c3847-612f7ef58ce19f9e3ab5",
          "file": "userProfileAuthentication.spec.ts",
          "line": 139,
          "column": 5
        },
        {
          "title": "PUT update Preferences",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 90,
                  "status": "failed",
                  "duration": 376,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:162:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:162:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/user/USR-94ACFCA6/preferences'\u001b[39m,\n    requestbody: { userId: \u001b[32m'USR-94ACFCA6'\u001b[39m, preferenceList: \u001b[36m[Array]\u001b[39m }\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 64 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:23.777Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-PUT-update-Preferences-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-PUT-update-Preferences-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "b9160ce08d66211c3847-007bf7321de9571bdd65",
          "file": "userProfileAuthentication.spec.ts",
          "line": 156,
          "column": 5
        },
        {
          "title": "Update Profile Pic",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 91,
                  "status": "failed",
                  "duration": 363,
                  "error": {
                    "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m",
                    "stack": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\n    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:175:26",
                    "location": {
                      "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                      "column": 159,
                      "line": 27
                    },
                    "snippet": "\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                        "column": 159,
                        "line": 27
                      },
                      "message": "Error:  Expected  '200 '  status code diffrent from actual 404  response code  \n\n\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"200\"\u001b[39m\nReceived: \u001b[31m\"404\"\u001b[39m\n\n\u001b[90m   at \u001b[39m../src/api-util.ts:27\n\n\u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36masync\u001b[39m verifyStatusCode(response\u001b[33m:\u001b[39m \u001b[33mAPIResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatusCode\u001b[33m:\u001b[39mstring)\u001b[33m:\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m<\u001b[39m\u001b[36mvoid\u001b[39m\u001b[33m>\u001b[39m {\n \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m _actualStatusCode\u001b[33m=\u001b[39mresponse\u001b[33m.\u001b[39mstatus()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 |\u001b[39m         expect(_actualStatusCode\u001b[33m.\u001b[39mtoString()\u001b[33m,\u001b[39m \u001b[32m` Expected  '${ expectedStatusCode } '  status code diffrent from actual ${_actualStatusCode}  response code  `\u001b[39m)\u001b[33m.\u001b[39mtoBe(expectedStatusCode\u001b[33m.\u001b[39mtoString())\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                                                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 28 |\u001b[39m     }\n \u001b[90m 29 |\u001b[39m\n \u001b[90m 30 |\u001b[39m     \u001b[90m/** Validate the actual and expected response body.\u001b[39m\u001b[0m\n\n\u001b[2m    at ApiUtil.verifyStatusCode (/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts:27:159)\u001b[22m\n\u001b[2m    at /home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/tests/userProfileAuthentication.spec.ts:175:26\u001b[22m"
                    }
                  ],
                  "stdout": [
                    {
                      "text": "[\n  {\n    statusCode: \u001b[32m'200'\u001b[39m,\n    endPoint: \u001b[32m'/api/content/user/profile/image/:userName'\u001b[39m,\n    requestbody: {}\n  }\n]\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "PUT - API response time <><><><><><><><><><><><><><><><>   :: 65 - ms\n"
                    },
                    {
                      "text": "\u001b[33m404\u001b[39m\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:24.867Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Update-Profile-Pic-chromium/test-failed-1.png"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-Update-Profile-Pic-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/src/api-util.ts",
                    "column": 159,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "b9160ce08d66211c3847-5316961c2bbe6016de1b",
          "file": "userProfileAuthentication.spec.ts",
          "line": 169,
          "column": 5
        },
        {
          "title": "GET Preferences",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 92,
                  "status": "passed",
                  "duration": 402,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  statusCode: \u001b[32m'200'\u001b[39m,\n  endPoint: \u001b[32m'/api/content/user/USR-94ACFCA6/preferences'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "GET - API response time <><><><><><><><><><><><><><><><>   :: 69 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: [\n    {\n      preferenceId: \u001b[32m'PRE-0001'\u001b[39m,\n      status: \u001b[33mfalse\u001b[39m,\n      preferenceName: \u001b[32m'Enable Web Tutor'\u001b[39m\n    },\n    {\n      preferenceId: \u001b[32m'PRE-0002'\u001b[39m,\n      status: \u001b[33mfalse\u001b[39m,\n      preferenceName: \u001b[32m'Enable Video Tutor'\u001b[39m\n    }\n  ]\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:25.964Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-GET-Preferences-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "b9160ce08d66211c3847-79780aa270e7c8249777",
          "file": "userProfileAuthentication.spec.ts",
          "line": 182,
          "column": 5
        },
        {
          "title": "DELETE Profile Pic",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 92,
                  "status": "passed",
                  "duration": 273,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "{\n  statusCode: \u001b[32m'200'\u001b[39m,\n  endPoint: \u001b[32m'/api/content/user/profile/image/:userName'\u001b[39m\n}\n"
                    },
                    {
                      "text": "Token status code is ***************** - >200\n"
                    },
                    {
                      "text": "DELETE - API response time <><><><><><><><><><><><><><><><>   :: 56 - ms\n"
                    },
                    {
                      "text": "\u001b[33m200\u001b[39m\n"
                    },
                    {
                      "text": "{\n  code: \u001b[33m200\u001b[39m,\n  status: \u001b[32m'OK'\u001b[39m,\n  data: {\n    profileImageUrl: \u001b[32m'http://storageapi.testing.yappes-enterprise.com/serve/files/defaults?format=png&meta=profile'\u001b[39m,\n    message: \u001b[32m'Profile Picture Resetted successfully'\u001b[39m\n  }\n}\n"
                    },
                    {
                      "text": "[ \u001b[32m'OK'\u001b[39m ]\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-10-03T11:13:26.465Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/sachin-singh/Documents/PlaywrightDetails/Git/dev_branch/PlaywrightAutomation/test-results/userProfileAuthentication-DELETE-Profile-Pic-chromium/test-finished-1.png"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "b9160ce08d66211c3847-703e84635dab70e39f75",
          "file": "userProfileAuthentication.spec.ts",
          "line": 195,
          "column": 5
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2024-10-03T11:12:16.514Z",
    "duration": 70272.936,
    "expected": 72,
    "skipped": 0,
    "unexpected": 91,
    "flaky": 0
  }
}